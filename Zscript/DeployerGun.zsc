class BaseDeployer : Weapon
{
  int price;
  property price : price;
  int removeWeapon;
  property removeWeapon : removeWeapon;

  BioProj proj;
  BioProjAlt altproj;
  Default
  {
    +WEAPON.CHEATNOTWEAPON
    +WEAPON.NOALERT
    
    +WEAPON.PRIMARY_USES_BOTH
    +WEAPON.ALT_AMMO_OPTIONAL
    +WEAPON.NO_AUTO_SWITCH

    +INVENTORY.ALWAYSPICKUP
    
    +SPRITEANGLE
    SpriteAngle 180;
        
    Weapon.AmmoType1 "CompanionAmmo";
    Weapon.AmmoType2 "CompanionAmmo"; // wrong value, we actually set this in postbeginplay()
    Weapon.AmmoGive1 1;
    Weapon.AmmoGive2 1;
    Weapon.AmmoUse1 0;
    Weapon.AmmoUse2 0;

    Weapon.Kickback 100;
    Weapon.SlotNumber 3;
    Scale 0.3;
    Weapon.UpSound "Weapons/BioReady";
    BaseDeployer.removeWeapon 0;
  }
  States
  {
    Spawn:
      BPBL M 1;
      Loop;
    Ready:
      BPBL ABCD 5 A_WeaponReady;
      Loop;
    Deselect:
      BPBL A 1 A_Lower;
      Loop;
    Select:
      BPBL A 35
      {
        let p = self;
        A_Raise();
        p.player.cheats |= CF_INSTANTWEAPSWITCH;
      } 
      Loop;
    Fire:
      TNT1 A 0
      {
        A_GunFlash();
        let p = self;
        int numCompanions = p.CountInv(invoker.ammotype2);
        int balance = p.CountInv(invoker.ammotype1);
        if(balance >= invoker.price && numCompanions >= 1)
        {
          String tag = invoker.getTag();

          A_StartSound("Weapons/BioFire");

          String gunClassName = invoker.GetClassName();
          invoker.proj = BioProj(A_FireProjectile("BioProj"));

          invoker.proj.companionClass = gunClassName.Left(gunClassName.Length() - 3);
          invoker.proj.niceName = tag;
          invoker.proj.numCompanions = numCompanions;
          invoker.proj.price = invoker.price;
        }
      }
    Hold:
      BPBL E 7;
      BPBL F 8;
      BPBL G 7;
      BPBL H 8 A_Refire("Hold");
      TNT1 A 0
      {
        if(invoker.proj){
          invoker.proj.A_Die();
        }
      }
      GoTo Ready;
    AltFire:
      TNT1 A 0
      {
        A_GunFlash();
        A_StartSound("Weapons/BioFire");
        invoker.altproj = BioProjAlt(A_FireProjectile("BioProjAlt"));
      }
    AltHold:
      BPBL E 7;
      BPBL F 8;
      BPBL G 7;
      BPBL H 8 A_Refire("AltHold");
      TNT1 A 0
      {
        if(invoker.altproj){
          invoker.altproj.A_Die();
        }
      }
      GoTo Ready;
  }

  override bool ShouldStay()
  {
    return false;
  }

  override void BeginPlay()
  {
    Super.BeginPlay();
    String className = getclassname();
    className = className.Left(className.Length() - 3);
    AmmoType2 = className.."Ammo";
  }

  // All items with a "Tag" will be printed big upon pickup in the middle of the screen
  override bool CanPickup(Actor toucher){
    toucher.A_Print("\cg"..GetTag(), 8, "BIGFONT");
    return true;
  }
}

class BioProj : Actor
{
  String companionClass;
  property companionClass : companionClass;
  String niceName;
  property niceName : niceName;
  int numCompanions;
  property numCompanions : numCompanions;
  int price;
  property price : price;
  Default
  {
    -NOGRAVITY
    +LOWGRAVITY
    +ROCKETTRAIL
    BounceType "Hexen";

    +Shootable
    +DontSplash
    +SeekerMissile
    +ForceRadiusDmg
    +DontFall
    +ThruSpecies
    Radius 5;
    Height 5;
    RenderStyle "Translucent";
    Alpha .7;
    Decal "BioDecal";
    Speed 5;
    DamageType "Companion";
    Species "Companion";
    Projectile;
  }
  States
  {
    Spawn:
      BPBP ABC 3 Bright A_SpawnItemEx("BioPuff");
    Flying:
      BPBP ABC 3 Bright;
      Loop;
    Death:
      TNT1 A 0
      {
        vel.x = 0;
        vel.y = 0;
        vel.z = 0;
        A_StartSound("Weapons/BioProj");
        let g = Globals(EventHandler.Find("Globals"));
        g.createCompanion(companionClass, pos, target, niceName, false);
        
        let p = PlayerPawn(target);
        let p2 = target;
        let gun = BaseDeployer(p.player.readyweapon);
        p2.TakeInventory(companionClass.."Ammo", 1);
        p2.TakeInventory("CompanionAmmo", price);
        if(numCompanions <= 1)
        {
          p.player.cheats &= ~CF_INSTANTWEAPSWITCH;
          p.player.pendingweapon = p.PickNextWeapon();
          //gun.OnDestroy();
        }
      }
      BPBP DEF 6 Bright;
      Stop;
  }
}

class BioProjAlt : Actor
{
  Default
  {
    -NOGRAVITY
    +LOWGRAVITY
    +ROCKETTRAIL
    BounceType "Hexen";

    +Shootable
    +DontSplash
    +SeekerMissile
    +ForceRadiusDmg
    +DontFall
    +ThruSpecies
    Radius 5;
    Height 5;
    RenderStyle "Translucent";
    Alpha .7;
    Decal "BioDecal";
    Speed 5;
    Species "Companion";
    DamageType "Companion";
    Projectile;
  }
  States
  {
    Spawn:
      BPBP NOP 3 Bright A_SpawnItemEx("BioPuff");
    Flying:
      BPBP NOP 3;
      Loop;
    Death:
      TNT1 A 0
      {
        vel.x = 0;
        vel.y = 0;
        vel.z = 0;
        bool spawnedAtLeastOne = false;
        let g = Globals(EventHandler.Find("Globals"));
        for(int i = 0; i < g.companions.Size(); i++)
        {
          if(g.companions[i]){
            spawnedAtLeastOne = true;
            g.companions[i].SetOrigin(pos, true);
          }else{
            g.companions.Delete(i);
          }
        }
      }
      BPBP DEF 6 Bright;
      Stop;
  }
}

class BioPuff : Actor
{
  Default
  {
    +NoBlockMap
    +NoGravity
    +Randomize
    +PuffOnActors
    +ThruSpecies
    Species "Companion";
    DamageType "Companion";
    RenderStyle "Translucent";
    Radius 0;
    Height 0;
    Scale .5;
    Alpha .25;
    VSpeed 1;
    Mass 5;
  }
  States
  {
    Spawn:
      BPBP GHIJKLMIHG 2 Bright;
      Stop;
  }
}

class CompanionAmmo : Ammo
{
  Default
  {
    +INVENTORY.ALWAYSPICKUP
    Inventory.Amount 3;
    Inventory.MaxAmount 999;
    Inventory.InterHubAmount 999;
    Inventory.PickupMessage "";
    Ammo.BackpackAmount 50;
    Ammo.BackpackMaxAmount 999;
  }
  States
  {
    Spawn:
      BIOC A -1;
      Stop;
  }
}