Class CommonItemFeatures : CustomInventory
{
  int price;
  Default
  {
    +Inventory.HubPower
    +Inventory.PersistentPower
    +Inventory.InvBar
    +SpriteAngle
    Scale 0.5;
    SpriteAngle 180;
    Inventory.MaxAmount 999;
    DamageFactor "Companion", 0.0;
  }
  States
  {
    Pickup:
      TNT1 A 0
      {
        GiveInventory(GetClassName(), 1);
        GiveInventory("CompanionAmmo", 1);
      }
      Stop;
  }
}

Class MarineCompanionFistItem : CommonItemFeatures
{
  Default
  {
    Inventory.PickupMessage "Got a Berserk Marine!";
    Tag "Berserk Marine";
    cameraHeight 5;
  }
  States
  {
    Spawn:
      ALY1 A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        invoker.price = invoker.cameraheight;
        int balance = p.CountInv("CompanionAmmo");
        if(Utilities.canAfford(balance, invoker.price))
        {
          p.TakeInventory("CompanionAmmo", invoker.price);
          let g = Globals(EventHandler.Find("Globals"));
          String className = invoker.GetClassName();
          className.Left(className.Length() - 4);
          g.createCompanion(className, p.pos, p, invoker.price, invoker.GetTag());
          return true;
        }
        return false;
      }
      Stop;
  }
}

Class MarineCompanionChainsawItem : CommonItemFeatures
{
  Default
  {
    Inventory.PickupMessage "Got a Chainsaw Marine!";
    Tag "Chainsaw Marine";
    cameraHeight 5;
  }
  States
  {
    Spawn:
      ALY7 A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        invoker.price = invoker.cameraheight;
        int balance = p.CountInv("CompanionAmmo");
        if(Utilities.canAfford(balance, invoker.price))
        {
          p.TakeInventory("CompanionAmmo", invoker.price);
          let g = Globals(EventHandler.Find("Globals"));
          String className = invoker.GetClassName();
          className.Left(className.Length() - 4);
          g.createCompanion(className, p.pos, p, invoker.price, invoker.GetTag());
          return true;
        }
        return false;
      }
      Stop;
  }
}

Class MarineCompanionPistolItem : CommonItemFeatures
{
  Default
  {
    Inventory.PickupMessage "Got a Pistol Marine!";
    Tag "Pistol Marine";
    cameraHeight 10;
  }
  States
  {
    Spawn:
      ALY2 A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        invoker.price = invoker.cameraheight;
        int balance = p.CountInv("CompanionAmmo");
        if(Utilities.canAfford(balance, invoker.price))
        {
          p.TakeInventory("CompanionAmmo", invoker.price);
          let g = Globals(EventHandler.Find("Globals"));
          String className = invoker.GetClassName();
          className.Left(className.Length() - 4);
          g.createCompanion(className, p.pos, p, invoker.price, invoker.GetTag());
          return true;
        }
        return false;
      }
      Stop;
  }
}

Class MarineCompanionSGItem : CommonItemFeatures
{
  Default
  {
    Inventory.PickupMessage "Got a Shotgun Marine!";
    Tag "Shotgun Marine";
    cameraHeight 10;
  }
  States
  {
    Spawn:
      ALY5 A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        invoker.price = invoker.cameraheight;
        int balance = p.CountInv("CompanionAmmo");
        if(Utilities.canAfford(balance, invoker.price))
        {
          p.TakeInventory("CompanionAmmo", invoker.price);
          let g = Globals(EventHandler.Find("Globals"));
          String className = invoker.GetClassName();
          className.Left(className.Length() - 4);
          g.createCompanion(className, p.pos, p, invoker.price, invoker.GetTag());
          return true;
        }
        return false;
      }
      Stop;
  }
}

Class MarineCompanionSSGItem : CommonItemFeatures
{
  Default
  {
    Inventory.PickupMessage "Got a Super Shotgun Marine!";
    Tag "Super Shotgun Marine";
    cameraHeight 15;
  }
  States
  {
    Spawn:
      AL11 A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        invoker.price = invoker.cameraheight;
        int balance = p.CountInv("CompanionAmmo");
        if(Utilities.canAfford(balance, invoker.price))
        {
          p.TakeInventory("CompanionAmmo", invoker.price);
          let g = Globals(EventHandler.Find("Globals"));
          String className = invoker.GetClassName();
          className.Left(className.Length() - 4);
          g.createCompanion(className, p.pos, p, invoker.price, invoker.GetTag());
          return true;
        }
        return false;
      }
      Stop;
  }
}

Class MarineCompanionCGItem : CommonItemFeatures
{
  Default
  {
    Inventory.PickupMessage "Got a Chaingun Marine!";
    Tag "Chaingun Marine";
    cameraHeight 15;
  }
  States
  {
    Spawn:
      ALY4 A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        invoker.price = invoker.cameraheight;
        int balance = p.CountInv("CompanionAmmo");
        if(Utilities.canAfford(balance, invoker.price))
        {
          p.TakeInventory("CompanionAmmo", invoker.price);
          let g = Globals(EventHandler.Find("Globals"));
          String className = invoker.GetClassName();
          className.Left(className.Length() - 4);
          g.createCompanion(className, p.pos, p, invoker.price, invoker.GetTag());
          return true;
        }
        return false;
      }
      Stop;
  }
}

Class MarineCompanionRocketItem : CommonItemFeatures
{
  Default
  {
    Inventory.PickupMessage "Got a Rocket Launcher Marine!";
    Tag "Rocket Launcher Marine";
    cameraHeight 15;
  }
  States
  {
    Spawn:
      ALY9 A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        invoker.price = invoker.cameraheight;
        int balance = p.CountInv("CompanionAmmo");
        if(Utilities.canAfford(balance, invoker.price))
        {
          p.TakeInventory("CompanionAmmo", invoker.price);
          let g = Globals(EventHandler.Find("Globals"));
          String className = invoker.GetClassName();
          className.Left(className.Length() - 4);
          g.createCompanion(className, p.pos, p, invoker.price, invoker.GetTag());
          return true;
        }
        return false;
      }
      Stop;
  }
}

Class MarineCompanionPlasmaItem : CommonItemFeatures
{
  Default
  {
    Inventory.PickupMessage "Got a Plasma Rifle Marine!";
    Tag "Plasma Rifle Marine";
    cameraHeight 15;
  }
  States
  {
    Spawn:
      ALY8 A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        invoker.price = invoker.cameraheight;
        int balance = p.CountInv("CompanionAmmo");
        if(Utilities.canAfford(balance, invoker.price))
        {
          p.TakeInventory("CompanionAmmo", invoker.price);
          let g = Globals(EventHandler.Find("Globals"));
          String className = invoker.GetClassName();
          className.Left(className.Length() - 4);
          g.createCompanion(className, p.pos, p, invoker.price, invoker.GetTag());
          return true;
        }
        return false;
      }
      Stop;
  }
}

Class MarineCompanionBFG9000Item : CommonItemFeatures
{
  Default
  {
    Inventory.PickupMessage "Got a BFG9000 Marine!";
    Tag "BFG9000 Marine";
    cameraHeight 30;
  }
  States
  {
    Spawn:
      AL10 A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        invoker.price = invoker.cameraheight;
        int balance = p.CountInv("CompanionAmmo");
        if(Utilities.canAfford(balance, invoker.price))
        {
          p.TakeInventory("CompanionAmmo", invoker.price);
          let g = Globals(EventHandler.Find("Globals"));
          String className = invoker.GetClassName();
          className.Left(className.Length() - 4);
          g.createCompanion(className, p.pos, p, invoker.price, invoker.GetTag());
          return true;
        }
        return false;
      }
      Stop;
  }
}

Class MarineCompanionBFG10KItem : CommonItemFeatures
{
  Default
  {
    Inventory.PickupMessage "Got a BFG10K Marine!";
    Tag "BFG10K Marine";
    cameraHeight 30;
  }
  States
  {
    Spawn:
      AL15 A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        invoker.price = invoker.cameraheight;
        int balance = p.CountInv("CompanionAmmo");
        if(Utilities.canAfford(balance, invoker.price))
        {
          p.TakeInventory("CompanionAmmo", invoker.price);
          let g = Globals(EventHandler.Find("Globals"));
          String className = invoker.GetClassName();
          className.Left(className.Length() - 4);
          g.createCompanion(className, p.pos, p, invoker.price, invoker.GetTag());
          return true;
        }
        return false;
      }
      Stop;
  }
}

Class MarineCompanionGLItem : CommonItemFeatures
{
  Default
  {
    Inventory.PickupMessage "Got a Grenade Launcher Marine!";
    Tag "Grenade Launcher Marine";
    cameraHeight 15;
  }
  States
  {
    Spawn:
      AL14 A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        invoker.price = invoker.cameraheight;
        int balance = p.CountInv("CompanionAmmo");
        if(Utilities.canAfford(balance, invoker.price))
        {
          p.TakeInventory("CompanionAmmo", invoker.price);
          let g = Globals(EventHandler.Find("Globals"));
          String className = invoker.GetClassName();
          className.Left(className.Length() - 4);
          g.createCompanion(className, p.pos, p, invoker.price, invoker.GetTag());
          return true;
        }
        return false;
      }
      Stop;
  }
}

Class MarineCompanionHSMissileItem : CommonItemFeatures
{
  Default
  {
    Inventory.PickupMessage "Got a Heat Seeking Missile Marine!";
    Tag "Heat Seeking Missile Marine";
    cameraHeight 20;
  }
  States
  {
    Spawn:
      AL13 A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        invoker.price = invoker.cameraheight;
        int balance = p.CountInv("CompanionAmmo");
        if(Utilities.canAfford(balance, invoker.price))
        {
          p.TakeInventory("CompanionAmmo", invoker.price);
          let g = Globals(EventHandler.Find("Globals"));
          String className = invoker.GetClassName();
          className.Left(className.Length() - 4);
          g.createCompanion(className, p.pos, p, invoker.price, invoker.GetTag());
          return true;
        }
        return false;
      }
      Stop;
  }
}

Class MarineCompanionRailgunItem : CommonItemFeatures
{
  Default
  {
    Inventory.PickupMessage "Got a Railgun Marine!";
    Tag "Railgun Marine";
    cameraHeight 10;
  }
  States
  {
    Spawn:
      AL12 A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        invoker.price = invoker.cameraheight;
        int balance = p.CountInv("CompanionAmmo");
        if(Utilities.canAfford(balance, invoker.price))
        {
          p.TakeInventory("CompanionAmmo", invoker.price);
          let g = Globals(EventHandler.Find("Globals"));
          String className = invoker.GetClassName();
          className.Left(className.Length() - 4);
          g.createCompanion(className, p.pos, p, invoker.price, invoker.GetTag());
          return true;
        }
        return false;
      }
      Stop;
  }
}

Class MarineCompanionSniperItem : CommonItemFeatures
{
  Default
  {
    Inventory.PickupMessage "Got a Sniper Marine!";
    Tag "Sniper Marine";
    cameraHeight 15;
  }
  States
  {
    Spawn:
      AL17 A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        invoker.price = invoker.cameraheight;
        int balance = p.CountInv("CompanionAmmo");
        if(Utilities.canAfford(balance, invoker.price))
        {
          p.TakeInventory("CompanionAmmo", invoker.price);
          let g = Globals(EventHandler.Find("Globals"));
          String className = invoker.GetClassName();
          className.Left(className.Length() - 4);
          g.createCompanion(className, p.pos, p, invoker.price, invoker.GetTag());
          return true;
        }
        return false;
      }
      Stop;
  }
}

Class MarineCompanionFlameThrowerItem : CommonItemFeatures
{
  Default
  {
    Inventory.PickupMessage "Got a Flame Thrower Marine!";
    Tag "Flame Thrower Marine";
    cameraHeight 10;
  }
  States
  {
    Spawn:
      AL16 A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        invoker.price = invoker.cameraheight;
        int balance = p.CountInv("CompanionAmmo");
        if(Utilities.canAfford(balance, invoker.price))
        {
          p.TakeInventory("CompanionAmmo", invoker.price);
          let g = Globals(EventHandler.Find("Globals"));
          String className = invoker.GetClassName();
          className.Left(className.Length() - 4);
          g.createCompanion(className, p.pos, p, invoker.price, invoker.GetTag());
          return true;
        }
        return false;
      }
      Stop;
  }
}

Class MarineCompanionMGItem : CommonItemFeatures
{
  Default
  {
    Inventory.PickupMessage "Got a Machine Gun Marine!";
    Tag "Machine Gun Marine";
    cameraHeight 10;
  }
  States
  {
    Spawn:
      ALY3 A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        invoker.price = invoker.cameraheight;
        int balance = p.CountInv("CompanionAmmo");
        if(Utilities.canAfford(balance, invoker.price))
        {
          p.TakeInventory("CompanionAmmo", invoker.price);
          let g = Globals(EventHandler.Find("Globals"));
          String className = invoker.GetClassName();
          className.Left(className.Length() - 4);
          g.createCompanion(className, p.pos, p, invoker.price, invoker.GetTag());
          return true;
        }
        return false;
      }
      Stop;
  }
}

Class MarineCompanionMinigunItem : CommonItemFeatures
{
  Default
  {
    Inventory.PickupMessage "Got a Minigun Marine!";
    Tag "Minigun Marine";
    cameraHeight 20;
  }
  States
  {
    Spawn:
      ALY6 A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        invoker.price = invoker.cameraheight;
        int balance = p.CountInv("CompanionAmmo");
        if(Utilities.canAfford(balance, invoker.price))
        {
          p.TakeInventory("CompanionAmmo", invoker.price);
          let g = Globals(EventHandler.Find("Globals"));
          String className = invoker.GetClassName();
          className.Left(className.Length() - 4);
          g.createCompanion(className, p.pos, p, invoker.price, invoker.GetTag());
          return true;
        }
        return false;
      }
      Stop;
  }
}

class CompanionZombieManItem : CommonItemFeatures
{
  Default
  {
    Inventory.PickupMessage "Got a Zombie Man!";
    Tag "Zombie Man";
    cameraHeight 1;
  }
  States
  {
    Spawn:
      POSS A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        invoker.price = invoker.cameraheight;
        int balance = p.CountInv("CompanionAmmo");
        if(Utilities.canAfford(balance, invoker.price))
        {
          p.TakeInventory("CompanionAmmo", invoker.price);
          let g = Globals(EventHandler.Find("Globals"));
          String className = invoker.GetClassName();
          className = className.Left(className.Length() - 4);
          console.printf("presummon "..className);
          g.createCompanion(className, p.pos, p, invoker.price, invoker.GetTag());
          return true;
        }
        return false;
      }
      Stop;
  }
}

class CompanionShotgunGuyItem : CommonItemFeatures
{
  Default
  {
    Inventory.PickupMessage "Got a Shotgun Guy!";
    Tag "Shotgun Guy";
    cameraHeight 15;
  }
  States
  {
    Spawn:
      SPOS A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        invoker.price = invoker.cameraheight;
        int balance = p.CountInv("CompanionAmmo");
        if(Utilities.canAfford(balance, invoker.price))
        {
          p.TakeInventory("CompanionAmmo", invoker.price);
          let g = Globals(EventHandler.Find("Globals"));
          String className = invoker.GetClassName();
          className.Left(className.Length() - 4);
          g.createCompanion(className, p.pos, p, invoker.price, invoker.GetTag());
          return true;
        }
        return false;
      }
      Stop;
  }
}

class CompanionChaingunGuyItem : CommonItemFeatures
{
  Default
  {
    Inventory.PickupMessage "Got a Chaingun Guy!";
    Tag "Chaingun Guy";
    cameraHeight 15;
  }
  States
  {
    Spawn:
      CPOS A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        invoker.price = invoker.cameraheight;
        int balance = p.CountInv("CompanionAmmo");
        if(Utilities.canAfford(balance, invoker.price))
        {
          p.TakeInventory("CompanionAmmo", invoker.price);
          let g = Globals(EventHandler.Find("Globals"));
          String className = invoker.GetClassName();
          className.Left(className.Length() - 4);
          g.createCompanion(className, p.pos, p, invoker.price, invoker.GetTag());
          return true;
        }
        return false;
      }
      Stop;
  }
}

class CompanionDemonItem : CommonItemFeatures
{
  Default
  {
    Inventory.PickupMessage "Got a Demon!";
    Tag "Demon";
    cameraHeight 3;
  }
  States
  {
    Spawn:
      SARG A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        invoker.price = invoker.cameraheight;
        int balance = p.CountInv("CompanionAmmo");
        if(Utilities.canAfford(balance, invoker.price))
        {
          p.TakeInventory("CompanionAmmo", invoker.price);
          let g = Globals(EventHandler.Find("Globals"));
          String className = invoker.GetClassName();
          className.Left(className.Length() - 4);
          g.createCompanion(className, p.pos, p, invoker.price, invoker.GetTag());
          return true;
        }
        return false;
      }
      Stop;
  }
}

class CompanionSpectreItem : CompanionDemonItem
{
  Default
  {
    RenderStyle "OptFuzzy";
    Inventory.PickupMessage "Got a Spectre!";
    Tag "Spectre";
  }
}

class CompanionLostSoulItem : CommonItemFeatures
{
  Default
  {
    Scale 0.6;
    Inventory.PickupMessage "Got a Lost Soul!";
    Tag "Lost Soul";
    cameraHeight 2;
  }
  States
  {
    Spawn:
      SKUL A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        invoker.price = invoker.cameraheight;
        int balance = p.CountInv("CompanionAmmo");
        if(Utilities.canAfford(balance, invoker.price))
        {
          p.TakeInventory("CompanionAmmo", invoker.price);
          let g = Globals(EventHandler.Find("Globals"));
          String className = invoker.GetClassName();
          className.Left(className.Length() - 4);
          g.createCompanion(className, p.pos, p, invoker.price, invoker.GetTag());
          return true;
        }
        return false;
      }
      Stop;
  }
}

class CompanionCacodemonItem : CommonItemFeatures
{
  Default
  {
    Scale 0.4;
    Inventory.PickupMessage "Got a Cacodemon!";
    Tag "Cacodemon";
    cameraHeight 15;
  }
  States
  {
    Spawn:
      HEAD A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        invoker.price = invoker.cameraheight;
        int balance = p.CountInv("CompanionAmmo");
        if(Utilities.canAfford(balance, invoker.price))
        {
          p.TakeInventory("CompanionAmmo", invoker.price);
          let g = Globals(EventHandler.Find("Globals"));
          String className = invoker.GetClassName();
          className.Left(className.Length() - 4);
          g.createCompanion(className, p.pos, p, invoker.price, invoker.GetTag());
          return true;
        }
        return false;
      }
      Stop;
  }
}

class CompanionPainElementalItem : CommonItemFeatures
{
  Default
  {
    Scale 0.38;
    Inventory.PickupMessage "Got a Pain Elemental!";
    Tag "Pain Elemental";
    cameraHeight 15;
  }
  States
  {
    Spawn:
      PAIN A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        invoker.price = invoker.cameraheight;
        int balance = p.CountInv("CompanionAmmo");
        if(Utilities.canAfford(balance, invoker.price))
        {
          p.TakeInventory("CompanionAmmo", invoker.price);
          let g = Globals(EventHandler.Find("Globals"));
          String className = invoker.GetClassName();
          className.Left(className.Length() - 4);
          g.createCompanion(className, p.pos, p, invoker.price, invoker.GetTag());
          return true;
        }
        return false;
      }
      Stop;
  }
}

class CompanionBaronOfHellItem : CommonItemFeatures
{
  Default
  {
    Scale 0.4;
    Inventory.PickupMessage "Got a Baron of Hell!";
    Tag "Baron of Hell";
    cameraHeight 15;
  }
  States
  {
    Spawn:
      BOSS A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        invoker.price = invoker.cameraheight;
        int balance = p.CountInv("CompanionAmmo");
        if(Utilities.canAfford(balance, invoker.price))
        {
          p.TakeInventory("CompanionAmmo", invoker.price);
          let g = Globals(EventHandler.Find("Globals"));
          String className = invoker.GetClassName();
          className.Left(className.Length() - 4);
          g.createCompanion(className, p.pos, p, invoker.price, invoker.GetTag());
          return true;
        }
        return false;
      }
      Stop;
  }
}

class CompanionHellKnightItem : CompanionBaronOfHellItem
{
  Default
  {
    Scale 0.4;
    Inventory.PickupMessage "Got a Hell Knight!";
    Tag "Hell Knight";
    cameraHeight 7;
  }
  States
  {
    Spawn:
      BOS2 A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        invoker.price = invoker.cameraheight;
        int balance = p.CountInv("CompanionAmmo");
        if(Utilities.canAfford(balance, invoker.price))
        {
          p.TakeInventory("CompanionAmmo", invoker.price);
          let g = Globals(EventHandler.Find("Globals"));
          String className = invoker.GetClassName();
          className.Left(className.Length() - 4);
          g.createCompanion(className, p.pos, p, invoker.price, invoker.GetTag());
          return true;
        }
        return false;
      }
      Stop;
  }
}

class CompanionArachnotronItem : CommonItemFeatures
{
  Default
  {
    Scale 0.3;
    Inventory.PickupMessage "Got an Arachnotron!";
    Tag "Arachnotron";
    cameraHeight 15;
  }
  States
  {
    Spawn:
      BSPI A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        invoker.price = invoker.cameraheight;
        int balance = p.CountInv("CompanionAmmo");
        if(Utilities.canAfford(balance, invoker.price))
        {
          p.TakeInventory("CompanionAmmo", invoker.price);
          let g = Globals(EventHandler.Find("Globals"));
          String className = invoker.GetClassName();
          className.Left(className.Length() - 4);
          g.createCompanion(className, p.pos, p, invoker.price, invoker.GetTag());
          return true;
        }
        return false;
      }
      Stop;
  }
}

class CompanionArchvileItem : CommonItemFeatures
{
  Default
  {
    Scale 0.35;
    Inventory.PickupMessage "Got an Archvile!";
    Tag "Archvile";
    cameraHeight 10;
  }
  States
  {
    Spawn:
      VILE A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        invoker.price = invoker.cameraheight;
        int balance = p.CountInv("CompanionAmmo");
        if(Utilities.canAfford(balance, invoker.price))
        {
          p.TakeInventory("CompanionAmmo", invoker.price);
          let g = Globals(EventHandler.Find("Globals"));
          String className = invoker.GetClassName();
          className.Left(className.Length() - 4);
          g.createCompanion(className, p.pos, p, invoker.price, invoker.GetTag());
          return true;
        }
        return false;
      }
      Stop;
  }
}

class CompanionFatsoItem : CommonItemFeatures
{
  Default
  {
    Scale 0.4;
    Inventory.PickupMessage "Got a Mancubus!";
    Tag "Mancubus";
    cameraHeight 15;
  }
  States
  {
    Spawn:
      FATT A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        invoker.price = invoker.cameraheight;
        int balance = p.CountInv("CompanionAmmo");
        if(Utilities.canAfford(balance, invoker.price))
        {
          p.TakeInventory("CompanionAmmo", invoker.price);
          let g = Globals(EventHandler.Find("Globals"));
          String className = invoker.GetClassName();
          className.Left(className.Length() - 4);
          g.createCompanion(className, p.pos, p, invoker.price, invoker.GetTag());
          return true;
        }
        return false;
      }
      Stop;
  }
}

class CompanionCyberdemonItem : CommonItemFeatures
{
  Default
  {
    Scale 0.28;
    Inventory.PickupMessage "Got a Cyberdemon!";
    Tag "Cyberdemon";
    cameraHeight 25;
  }
  States
  {
    Spawn:
      CYBR A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        invoker.price = invoker.cameraheight;
        int balance = p.CountInv("CompanionAmmo");
        if(Utilities.canAfford(balance, invoker.price))
        {
          p.TakeInventory("CompanionAmmo", invoker.price);
          let g = Globals(EventHandler.Find("Globals"));
          String className = invoker.GetClassName();
          className.Left(className.Length() - 4);
          g.createCompanion(className, p.pos, p, invoker.price, invoker.GetTag());
          return true;
        }
        return false;
      }
      Stop;
  }
}

class CompanionSpiderMastermindItem : CommonItemFeatures
{
  Default
  {
    Scale 0.15;
    Inventory.PickupMessage "Got a Spider Mastermind!";
    Tag "Spider Mastermind";
    cameraHeight 25;
  }
  States
  {
    Spawn:
      SPID A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        invoker.price = invoker.cameraheight;
        int balance = p.CountInv("CompanionAmmo");
        if(Utilities.canAfford(balance, invoker.price))
        {
          p.TakeInventory("CompanionAmmo", invoker.price);
          let g = Globals(EventHandler.Find("Globals"));
          String className = invoker.GetClassName();
          className.Left(className.Length() - 4);
          g.createCompanion(className, p.pos, p, invoker.price, invoker.GetTag());
          return true;
        }
        return false;
      }
      Stop;
  }
}

class CompanionWolfensteinSSItem : CommonItemFeatures
{
  Default
  {
    Inventory.PickupMessage "Got a Wolfenstein SS!";
    Tag "Wolfenstein SS";
    cameraHeight 4;
  }
  States
  {
    Spawn:
      SSWV A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        invoker.price = invoker.cameraheight;
        int balance = p.CountInv("CompanionAmmo");
        if(Utilities.canAfford(balance, invoker.price))
        {
          p.TakeInventory("CompanionAmmo", invoker.price);
          let g = Globals(EventHandler.Find("Globals"));
          String className = invoker.GetClassName();
          className.Left(className.Length() - 4);
          g.createCompanion(className, p.pos, p, invoker.price, invoker.GetTag());
          return true;
        }
        return false;
      }
      Stop;
  }
}

class CompanionRevenantItem : CommonItemFeatures
{
  Default
  {
    Scale 0.35;
    Inventory.PickupMessage "Got a Revenant!";
    Tag "Revenant";
    cameraHeight 10;
  }
  States
  {
    Spawn:
      SKEL A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        invoker.price = invoker.cameraheight;
        int balance = p.CountInv("CompanionAmmo");
        if(Utilities.canAfford(balance, invoker.price))
        {
          p.TakeInventory("CompanionAmmo", invoker.price);
          let g = Globals(EventHandler.Find("Globals"));
          String className = invoker.GetClassName();
          className.Left(className.Length() - 4);
          g.createCompanion(className, p.pos, p, invoker.price, invoker.GetTag());
          return true;
        }
        return false;
      }
      Stop;
  }
}

class CompanionDoomImpItem : CommonItemFeatures
{
  Default
  {
    Inventory.PickupMessage "Got an Imp!";
    Tag "Imp";
    cameraHeight 3;
  }
  States
  {
    Spawn:
      TROO A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        invoker.price = invoker.cameraheight;
        int balance = p.CountInv("CompanionAmmo");
        if(Utilities.canAfford(balance, invoker.price))
        {
          p.TakeInventory("CompanionAmmo", invoker.price);
          let g = Globals(EventHandler.Find("Globals"));
          String className = invoker.GetClassName();
          className.Left(className.Length() - 4);
          g.createCompanion(className, p.pos, p, invoker.price, invoker.GetTag());
          return true;
        }
        return false;
      }
      Stop;
  }
}

Class BelphegorItem : CommonItemFeatures
{
  Default
  {
    Scale 0.4;
    Inventory.PickupMessage "Got a Belphegor!";
    Tag "Belphagor";
    cameraHeight 20;
  }
  States
  {
    Spawn:
      BOS3 A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        invoker.price = invoker.cameraheight;
        int balance = p.CountInv("CompanionAmmo");
        if(Utilities.canAfford(balance, invoker.price))
        {
          p.TakeInventory("CompanionAmmo", invoker.price);
          let g = Globals(EventHandler.Find("Globals"));
          String className = invoker.GetClassName();
          className.Left(className.Length() - 4);
          g.createCompanion(className, p.pos, p, invoker.price, invoker.GetTag());
          return true;
        }
        return false;
      }
      Stop;
  }
}

Class AfritItem : CommonItemFeatures
{
  Default
  {
    Inventory.PickupMessage "Got an Afrit!";
    Tag "Afrit";
    Scale 0.4;
    Inventory.Icon "FRITV0";
    cameraHeight 20;
  }
  States
  {
    Spawn:
      FRIT A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        invoker.price = invoker.cameraheight;
        int balance = p.CountInv("CompanionAmmo");
        if(Utilities.canAfford(balance, invoker.price))
        {
          p.TakeInventory("CompanionAmmo", invoker.price);
          let g = Globals(EventHandler.Find("Globals"));
          String className = invoker.GetClassName();
          className.Left(className.Length() - 4);
          g.createCompanion(className, p.pos, p, invoker.price, invoker.GetTag());
          return true;
        }
        return false;
      }
      Stop;
  }
}

Class MarauderItem : CommonItemFeatures
{
  Default
  {
    Scale 0.48;
    Inventory.PickupMessage "Got a Marauder!";
    Tag "Marauder";
    cameraHeight 20;
  }
  States
  {
    Spawn:
      MAUD A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        invoker.price = invoker.cameraheight;
        int balance = p.CountInv("CompanionAmmo");
        if(Utilities.canAfford(balance, invoker.price))
        {
          p.TakeInventory("CompanionAmmo", invoker.price);
          let g = Globals(EventHandler.Find("Globals"));
          String className = invoker.GetClassName();
          className.Left(className.Length() - 4);
          g.createCompanion(className, p.pos, p, invoker.price, invoker.GetTag());
          return true;
        }
        return false;
      }
      Stop;
  }
}

Class ArachnophyteItem : CommonItemFeatures
{
  Default
  {
    Scale 0.2;
    Inventory.PickupMessage "Got an Arachnophyte!";
    Tag "Arachnophyte";
    cameraHeight 20;
  }
  States
  {
    Spawn:
      APYT A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        invoker.price = invoker.cameraheight;
        int balance = p.CountInv("CompanionAmmo");
        if(Utilities.canAfford(balance, invoker.price))
        {
          p.TakeInventory("CompanionAmmo", invoker.price);
          let g = Globals(EventHandler.Find("Globals"));
          String className = invoker.GetClassName();
          className.Left(className.Length() - 4);
          g.createCompanion(className, p.pos, p, invoker.price, invoker.GetTag());
          return true;
        }
        return false;
      }
      Stop;
  }
}

Class ArchonOfHellItem : CommonItemFeatures
{
  Default
  {
    Scale 0.4;
    Inventory.PickupMessage "Got an Archon of Hell!";
    Tag "Archon of Hell";
    cameraHeight 20;
  }
  States
  {
    Spawn:
      BOS4 A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        invoker.price = invoker.cameraheight;
        int balance = p.CountInv("CompanionAmmo");
        if(Utilities.canAfford(balance, invoker.price))
        {
          p.TakeInventory("CompanionAmmo", invoker.price);
          let g = Globals(EventHandler.Find("Globals"));
          String className = invoker.GetClassName();
          className.Left(className.Length() - 4);
          g.createCompanion(className, p.pos, p, invoker.price, invoker.GetTag());
          return true;
        }
        return false;
      }
      Stop;
  }
}

Class MurderBallItem : CommonItemFeatures
{
  Default
  {
    Inventory.PickupMessage "Got a Murder Ball!";
    Tag "Murder Ball";
    cameraHeight 100;
  }
  States
  {
    Spawn:
      BERS A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        invoker.price = invoker.cameraheight;
        int balance = p.CountInv("CompanionAmmo");
        if(Utilities.canAfford(balance, invoker.price))
        {
          p.TakeInventory("CompanionAmmo", invoker.price);
          let g = Globals(EventHandler.Find("Globals"));
          String className = invoker.GetClassName();
          className.Left(className.Length() - 4);
          g.createCompanion(className, p.pos, p, invoker.price, invoker.GetTag());
          return true;
        }
        return false;
      }
      Stop;
  }
}