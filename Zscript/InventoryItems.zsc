Class CommonItemFeatures : CustomInventory
{
  Default
  {
    +Inventory.HubPower
    +Inventory.PersistentPower
    +Inventory.InvBar
    +SpriteAngle
    Scale 0.5;
    SpriteAngle 180;
    Inventory.MaxAmount 999;
    cameraheight 69;
  }
  States
  {
    Pickup:
      TNT1 A 0
      {
        GiveInventory(GetClassName(), 1);
        GiveInventory("CompanionAmmo", 1);
      }
      Stop;
  }
}

Class MarineCompanionFistItem : CommonItemFeatures
{
  Default
  {
    Inventory.PickupMessage "Got a Berserk Marine!";
    Tag "Berserk Marine";
  }
  States
  {
    Spawn:
      ALY1 A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        if(p.CountInv("CompanionAmmo") >= 69){
          Actor companion = Actor.Spawn("MarineCompanionFist", pos);
          companion.bFriendly = true;
          companion.bQuickToRetaliate = true;
          companion.bSlidesOnWalls = true;
          companion.bNoBlockMonst = true;
          companion.bCountKill = false;
          companion.bAlwaysFast = true;
          companion.bMissileMore = true;
          companion.bMissileEvenMore = true;
          companion.bHarmFriends = false;
          companion.bDontHarmSpecies = true;
          companion.bIsMonster = true;
          companion.bSolid = true;
          companion.bCanPushWalls = true;
          companion.bCanUseWalls = true;
          companion.bCanPass = true;
          companion.bShootable = true;
          companion.health = 1;
          companion.MaxTargetRange = 2048;
          companion.A_SetSpecies("Companion");
          companion.ApplyDamageFactor("Companion", 0.0);

          GlobalVariables g;
          g = GlobalVariables(EventHandler.Find("GlobalVariables"));
          g.companions.Push(companion);

          let p = players[PlayerNumber()].mo;
          companion.Angle = p.Angle;
          companion.movedir = Utilities.angleToMoveDir(p.Angle);
          companion.TryWalk();
          p.TakeInventory("CompanionAmmo", cameraheight);
        }else{
          console.printf("Not enough money");
        }
      }
      Stop;
  }
}

Class MarineCompanionChainsawItem : CommonItemFeatures
{
  Default
  {
    Inventory.PickupMessage "Got a Chainsaw Marine!";
    Tag "Chainsaw Marine";
  }
  States
  {
    Spawn:
      ALY7 A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        if(p.CountInv("CompanionAmmo") >= 69){
          Actor companion = Actor.Spawn("MarineCompanionChainsaw", pos);
          companion.bFriendly = true;
          companion.bQuickToRetaliate = true;
          companion.bSlidesOnWalls = true;
          companion.bNoBlockMonst = true;
          companion.bCountKill = false;
          companion.bAlwaysFast = true;
          companion.bMissileMore = true;
          companion.bMissileEvenMore = true;
          companion.bHarmFriends = false;
          companion.bDontHarmSpecies = true;
          companion.bIsMonster = true;
          companion.bSolid = true;
          companion.bCanPushWalls = true;
          companion.bCanUseWalls = true;
          companion.bCanPass = true;
          companion.bShootable = true;
          companion.health = 1;
          companion.MaxTargetRange = 2048;
          companion.A_SetSpecies("Companion");
          companion.ApplyDamageFactor("Companion", 0.0);

          GlobalVariables g;
          g = GlobalVariables(EventHandler.Find("GlobalVariables"));
          g.companions.Push(companion);

          let p = players[PlayerNumber()].mo;
          companion.Angle = p.Angle;
          companion.movedir = Utilities.angleToMoveDir(p.Angle);
          companion.TryWalk();
          p.TakeInventory("CompanionAmmo", cameraheight);
        }else{
          console.printf("Not enough money");
        }
      }
      Stop;
  }
}

Class MarineCompanionPistolItem : CommonItemFeatures
{
  Default
  {
    Inventory.PickupMessage "Got a Pistol Marine!";
    Tag "Pistol Marine";
  }
  States
  {
    Spawn:
      ALY2 A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        if(p.CountInv("CompanionAmmo") >= 69){
          Actor companion = Actor.Spawn("MarineCompanionPistol", pos);
          companion.bFriendly = true;
          companion.bQuickToRetaliate = true;
          companion.bSlidesOnWalls = true;
          companion.bNoBlockMonst = true;
          companion.bCountKill = false;
          companion.bAlwaysFast = true;
          companion.bMissileMore = true;
          companion.bMissileEvenMore = true;
          companion.bHarmFriends = false;
          companion.bDontHarmSpecies = true;
          companion.bIsMonster = true;
          companion.bSolid = true;
          companion.bCanPushWalls = true;
          companion.bCanUseWalls = true;
          companion.bCanPass = true;
          companion.bShootable = true;
          companion.health = 1;
          companion.MaxTargetRange = 2048;
          companion.A_SetSpecies("Companion");
          companion.ApplyDamageFactor("Companion", 0.0);

          GlobalVariables g;
          g = GlobalVariables(EventHandler.Find("GlobalVariables"));
          g.companions.Push(companion);

          let p = players[PlayerNumber()].mo;
          companion.Angle = p.Angle;
          companion.movedir = Utilities.angleToMoveDir(p.Angle);
          companion.TryWalk();
          p.TakeInventory("CompanionAmmo", cameraheight);
        }else{
          console.printf("Not enough money");
        }
      }
      Stop;
  }
}

Class MarineCompanionSGItem : CommonItemFeatures
{
  Default
  {
    Inventory.PickupMessage "Got a Shotgun Marine!";
    Tag "Shotgun Marine";
  }
  States
  {
    Spawn:
      ALY5 A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        if(p.CountInv("CompanionAmmo") >= 69){
          Actor companion = Actor.Spawn("MarineCompanionSG", pos);
          companion.bFriendly = true;
          companion.bQuickToRetaliate = true;
          companion.bSlidesOnWalls = true;
          companion.bNoBlockMonst = true;
          companion.bCountKill = false;
          companion.bAlwaysFast = true;
          companion.bMissileMore = true;
          companion.bMissileEvenMore = true;
          companion.bHarmFriends = false;
          companion.bDontHarmSpecies = true;
          companion.bIsMonster = true;
          companion.bSolid = true;
          companion.bCanPushWalls = true;
          companion.bCanUseWalls = true;
          companion.bCanPass = true;
          companion.bShootable = true;
          companion.health = 1;
          companion.MaxTargetRange = 2048;
          companion.A_SetSpecies("Companion");
          companion.ApplyDamageFactor("Companion", 0.0);

          GlobalVariables g;
          g = GlobalVariables(EventHandler.Find("GlobalVariables"));
          g.companions.Push(companion);

          let p = players[PlayerNumber()].mo;
          companion.Angle = p.Angle;
          companion.movedir = Utilities.angleToMoveDir(p.Angle);
          companion.TryWalk();
          p.TakeInventory("CompanionAmmo", cameraheight);
        }else{
          console.printf("Not enough money");
        }
      }
      Stop;
  }
}

Class MarineCompanionSSGItem : CommonItemFeatures
{
  Default
  {
    Inventory.PickupMessage "Got a Super Shotgun Marine!";
    Tag "Super Shotgun Marine";
  }
  States
  {
    Spawn:
      AL11 A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        if(p.CountInv("CompanionAmmo") >= 69){
          Actor companion = Actor.Spawn("MarineCompanionSSG", pos);
          companion.bFriendly = true;
          companion.bQuickToRetaliate = true;
          companion.bSlidesOnWalls = true;
          companion.bNoBlockMonst = true;
          companion.bCountKill = false;
          companion.bAlwaysFast = true;
          companion.bMissileMore = true;
          companion.bMissileEvenMore = true;
          companion.bHarmFriends = false;
          companion.bDontHarmSpecies = true;
          companion.bIsMonster = true;
          companion.bSolid = true;
          companion.bCanPushWalls = true;
          companion.bCanUseWalls = true;
          companion.bCanPass = true;
          companion.bShootable = true;
          companion.health = 1;
          companion.MaxTargetRange = 2048;
          companion.A_SetSpecies("Companion");
          companion.ApplyDamageFactor("Companion", 0.0);

          GlobalVariables g;
          g = GlobalVariables(EventHandler.Find("GlobalVariables"));
          g.companions.Push(companion);

          let p = players[PlayerNumber()].mo;
          companion.Angle = p.Angle;
          companion.movedir = Utilities.angleToMoveDir(p.Angle);
          companion.TryWalk();
          p.TakeInventory("CompanionAmmo", cameraheight);
        }else{
          console.printf("Not enough money");
        }
      }
      Stop;
  }
}

Class MarineCompanionCGItem : CommonItemFeatures
{
  Default
  {
    Inventory.PickupMessage "Got a Chaingun Marine!";
    Tag "Chaingun Marine";
  }
  States
  {
    Spawn:
      ALY4 A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        if(p.CountInv("CompanionAmmo") >= 69){
          Actor companion = Actor.Spawn("MarineCompanionCG", pos);
          companion.bFriendly = true;
          companion.bQuickToRetaliate = true;
          companion.bSlidesOnWalls = true;
          companion.bNoBlockMonst = true;
          companion.bCountKill = false;
          companion.bAlwaysFast = true;
          companion.bMissileMore = true;
          companion.bMissileEvenMore = true;
          companion.bHarmFriends = false;
          companion.bDontHarmSpecies = true;
          companion.bIsMonster = true;
          companion.bSolid = true;
          companion.bCanPushWalls = true;
          companion.bCanUseWalls = true;
          companion.bCanPass = true;
          companion.bShootable = true;
          companion.health = 1;
          companion.MaxTargetRange = 2048;
          companion.A_SetSpecies("Companion");
          companion.ApplyDamageFactor("Companion", 0.0);

          GlobalVariables g;
          g = GlobalVariables(EventHandler.Find("GlobalVariables"));
          g.companions.Push(companion);

          let p = players[PlayerNumber()].mo;
          companion.Angle = p.Angle;
          companion.movedir = Utilities.angleToMoveDir(p.Angle);
          companion.TryWalk();
          p.TakeInventory("CompanionAmmo", cameraheight);
        }else{
          console.printf("Not enough money");
        }
      }
      Stop;
  }
}

Class MarineCompanionRocketItem : CommonItemFeatures
{
  Default
  {
    Inventory.PickupMessage "Got a Rocket Launcher Marine!";
    Tag "Rocket Launcher Marine";
  }
  States
  {
    Spawn:
      ALY9 A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        if(p.CountInv("CompanionAmmo") >= 69){
          Actor companion = Actor.Spawn("MarineCompanionRocket", pos);
          companion.bFriendly = true;
          companion.bQuickToRetaliate = true;
          companion.bSlidesOnWalls = true;
          companion.bNoBlockMonst = true;
          companion.bCountKill = false;
          companion.bAlwaysFast = true;
          companion.bMissileMore = true;
          companion.bMissileEvenMore = true;
          companion.bHarmFriends = false;
          companion.bDontHarmSpecies = true;
          companion.bIsMonster = true;
          companion.bSolid = true;
          companion.bCanPushWalls = true;
          companion.bCanUseWalls = true;
          companion.bCanPass = true;
          companion.bShootable = true;
          companion.health = 1;
          companion.MaxTargetRange = 2048;
          companion.A_SetSpecies("Companion");
          companion.ApplyDamageFactor("Companion", 0.0);

          GlobalVariables g;
          g = GlobalVariables(EventHandler.Find("GlobalVariables"));
          g.companions.Push(companion);

          let p = players[PlayerNumber()].mo;
          companion.Angle = p.Angle;
          companion.movedir = Utilities.angleToMoveDir(p.Angle);
          companion.TryWalk();
          p.TakeInventory("CompanionAmmo", cameraheight);
        }else{
          console.printf("Not enough money");
        }
      }
      Stop;
  }
}

Class MarineCompanionPlasmaItem : CommonItemFeatures
{
  Default
  {
    Inventory.PickupMessage "Got a Plasma Rifle Marine!";
    Tag "Plasma Rifle Marine";
  }
  States
  {
    Spawn:
      ALY8 A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        if(p.CountInv("CompanionAmmo") >= 69){
          Actor companion = Actor.Spawn("MarineCompanionPlasma", pos);
          companion.bFriendly = true;
          companion.bQuickToRetaliate = true;
          companion.bSlidesOnWalls = true;
          companion.bNoBlockMonst = true;
          companion.bCountKill = false;
          companion.bAlwaysFast = true;
          companion.bMissileMore = true;
          companion.bMissileEvenMore = true;
          companion.bHarmFriends = false;
          companion.bDontHarmSpecies = true;
          companion.bIsMonster = true;
          companion.bSolid = true;
          companion.bCanPushWalls = true;
          companion.bCanUseWalls = true;
          companion.bCanPass = true;
          companion.bShootable = true;
          companion.health = 1;
          companion.MaxTargetRange = 2048;
          companion.A_SetSpecies("Companion");
          companion.ApplyDamageFactor("Companion", 0.0);

          GlobalVariables g;
          g = GlobalVariables(EventHandler.Find("GlobalVariables"));
          g.companions.Push(companion);

          let p = players[PlayerNumber()].mo;
          companion.Angle = p.Angle;
          companion.movedir = Utilities.angleToMoveDir(p.Angle);
          companion.TryWalk();
          p.TakeInventory("CompanionAmmo", cameraheight);
        }else{
          console.printf("Not enough money");
        }
      }
      Stop;
  }
}

Class MarineCompanionBFG9000Item : CommonItemFeatures
{
  Default
  {
    Inventory.PickupMessage "Got a BFG9000 Marine!";
    Tag "BFG9000 Marine";
  }
  States
  {
    Spawn:
      AL10 A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        if(p.CountInv("CompanionAmmo") >= 69){
          Actor companion = Actor.Spawn("MarineCompanionBFG9000", pos);
          companion.bFriendly = true;
          companion.bQuickToRetaliate = true;
          companion.bSlidesOnWalls = true;
          companion.bNoBlockMonst = true;
          companion.bCountKill = false;
          companion.bAlwaysFast = true;
          companion.bMissileMore = true;
          companion.bMissileEvenMore = true;
          companion.bHarmFriends = false;
          companion.bDontHarmSpecies = true;
          companion.bIsMonster = true;
          companion.bSolid = true;
          companion.bCanPushWalls = true;
          companion.bCanUseWalls = true;
          companion.bCanPass = true;
          companion.bShootable = true;
          companion.health = 1;
          companion.MaxTargetRange = 2048;
          companion.A_SetSpecies("Companion");
          companion.ApplyDamageFactor("Companion", 0.0);

          GlobalVariables g;
          g = GlobalVariables(EventHandler.Find("GlobalVariables"));
          g.companions.Push(companion);

          let p = players[PlayerNumber()].mo;
          companion.Angle = p.Angle;
          companion.movedir = Utilities.angleToMoveDir(p.Angle);
          companion.TryWalk();
          p.TakeInventory("CompanionAmmo", cameraheight);
        }else{
          console.printf("Not enough money");
        }
      }
      Stop;
  }
}

Class MarineCompanionBFG10KItem : CommonItemFeatures
{
  Default
  {
    Inventory.PickupMessage "Got a BFG10K Marine!";
    Tag "BFG10K Marine";
  }
  States
  {
    Spawn:
      AL15 A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        if(p.CountInv("CompanionAmmo") >= 69){
          Actor companion = Actor.Spawn("MarineCompanionBFG10K", pos);
          companion.bFriendly = true;
          companion.bQuickToRetaliate = true;
          companion.bSlidesOnWalls = true;
          companion.bNoBlockMonst = true;
          companion.bCountKill = false;
          companion.bAlwaysFast = true;
          companion.bMissileMore = true;
          companion.bMissileEvenMore = true;
          companion.bHarmFriends = false;
          companion.bDontHarmSpecies = true;
          companion.bIsMonster = true;
          companion.bSolid = true;
          companion.bCanPushWalls = true;
          companion.bCanUseWalls = true;
          companion.bCanPass = true;
          companion.bShootable = true;
          companion.health = 1;
          companion.MaxTargetRange = 2048;
          companion.A_SetSpecies("Companion");
          companion.ApplyDamageFactor("Companion", 0.0);

          GlobalVariables g;
          g = GlobalVariables(EventHandler.Find("GlobalVariables"));
          g.companions.Push(companion);

          let p = players[PlayerNumber()].mo;
          companion.Angle = p.Angle;
          companion.movedir = Utilities.angleToMoveDir(p.Angle);
          companion.TryWalk();
          p.TakeInventory("CompanionAmmo", cameraheight);
        }else{
          console.printf("Not enough money");
        }
      }
      Stop;
  }
}

Class MarineCompanionGLItem : CommonItemFeatures
{
  Default
  {
    Inventory.PickupMessage "Got a Grenade Launcher Marine!";
    Tag "Grenade Launcher Marine";
  }
  States
  {
    Spawn:
      AL14 A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        if(p.CountInv("CompanionAmmo") >= 69){
          Actor companion = Actor.Spawn("MarineCompanionGL", pos);
          companion.bFriendly = true;
          companion.bQuickToRetaliate = true;
          companion.bSlidesOnWalls = true;
          companion.bNoBlockMonst = true;
          companion.bCountKill = false;
          companion.bAlwaysFast = true;
          companion.bMissileMore = true;
          companion.bMissileEvenMore = true;
          companion.bHarmFriends = false;
          companion.bDontHarmSpecies = true;
          companion.bIsMonster = true;
          companion.bSolid = true;
          companion.bCanPushWalls = true;
          companion.bCanUseWalls = true;
          companion.bCanPass = true;
          companion.bShootable = true;
          companion.health = 1;
          companion.MaxTargetRange = 2048;
          companion.A_SetSpecies("Companion");
          companion.ApplyDamageFactor("Companion", 0.0);

          GlobalVariables g;
          g = GlobalVariables(EventHandler.Find("GlobalVariables"));
          g.companions.Push(companion);

          let p = players[PlayerNumber()].mo;
          companion.Angle = p.Angle;
          companion.movedir = Utilities.angleToMoveDir(p.Angle);
          companion.TryWalk();
          p.TakeInventory("CompanionAmmo", cameraheight);
        }else{
          console.printf("Not enough money");
        }
      }
      Stop;
  }
}

Class MarineCompanionHSMissileItem : CommonItemFeatures
{
  Default
  {
    Inventory.PickupMessage "Got a Heat Seeking Missile Marine!";
    Tag "Heat Seeking Missile Marine";
  }
  States
  {
    Spawn:
      AL13 A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        if(p.CountInv("CompanionAmmo") >= 69){
          Actor companion = Actor.Spawn("MarineCompanionHSMissile", pos);
          companion.bFriendly = true;
          companion.bQuickToRetaliate = true;
          companion.bSlidesOnWalls = true;
          companion.bNoBlockMonst = true;
          companion.bCountKill = false;
          companion.bAlwaysFast = true;
          companion.bMissileMore = true;
          companion.bMissileEvenMore = true;
          companion.bHarmFriends = false;
          companion.bDontHarmSpecies = true;
          companion.bIsMonster = true;
          companion.bSolid = true;
          companion.bCanPushWalls = true;
          companion.bCanUseWalls = true;
          companion.bCanPass = true;
          companion.bShootable = true;
          companion.health = 1;
          companion.MaxTargetRange = 2048;
          companion.A_SetSpecies("Companion");
          companion.ApplyDamageFactor("Companion", 0.0);

          GlobalVariables g;
          g = GlobalVariables(EventHandler.Find("GlobalVariables"));
          g.companions.Push(companion);

          let p = players[PlayerNumber()].mo;
          companion.Angle = p.Angle;
          companion.movedir = Utilities.angleToMoveDir(p.Angle);
          companion.TryWalk();
          p.TakeInventory("CompanionAmmo", cameraheight);
        }else{
          console.printf("Not enough money");
        }
      }
      Stop;
  }
}

Class MarineCompanionRailgunItem : CommonItemFeatures
{
  Default
  {
    Inventory.PickupMessage "Got a Railgun Marine!";
    Tag "Railgun Marine";
  }
  States
  {
    Spawn:
      AL12 A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        if(p.CountInv("CompanionAmmo") >= 69){
          Actor companion = Actor.Spawn("MarineCompanionRailgun", pos);
          companion.bFriendly = true;
          companion.bQuickToRetaliate = true;
          companion.bSlidesOnWalls = true;
          companion.bNoBlockMonst = true;
          companion.bCountKill = false;
          companion.bAlwaysFast = true;
          companion.bMissileMore = true;
          companion.bMissileEvenMore = true;
          companion.bHarmFriends = false;
          companion.bDontHarmSpecies = true;
          companion.bIsMonster = true;
          companion.bSolid = true;
          companion.bCanPushWalls = true;
          companion.bCanUseWalls = true;
          companion.bCanPass = true;
          companion.bShootable = true;
          companion.health = 1;
          companion.MaxTargetRange = 2048;
          companion.A_SetSpecies("Companion");
          companion.ApplyDamageFactor("Companion", 0.0);

          GlobalVariables g;
          g = GlobalVariables(EventHandler.Find("GlobalVariables"));
          g.companions.Push(companion);

          let p = players[PlayerNumber()].mo;
          companion.Angle = p.Angle;
          companion.movedir = Utilities.angleToMoveDir(p.Angle);
          companion.TryWalk();
          p.TakeInventory("CompanionAmmo", cameraheight);
        }else{
          console.printf("Not enough money");
        }
      }
      Stop;
  }
}

Class MarineCompanionSniperItem : CommonItemFeatures
{
  Default
  {
    Inventory.PickupMessage "Got a Sniper Marine!";
    Tag "Sniper Marine";
  }
  States
  {
    Spawn:
      AL17 A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        if(p.CountInv("CompanionAmmo") >= 69){
          Actor companion = Actor.Spawn("MarineCompanionSniper", pos);
          companion.bFriendly = true;
          companion.bQuickToRetaliate = true;
          companion.bSlidesOnWalls = true;
          companion.bNoBlockMonst = true;
          companion.bCountKill = false;
          companion.bAlwaysFast = true;
          companion.bMissileMore = true;
          companion.bMissileEvenMore = true;
          companion.bHarmFriends = false;
          companion.bDontHarmSpecies = true;
          companion.bIsMonster = true;
          companion.bSolid = true;
          companion.bCanPushWalls = true;
          companion.bCanUseWalls = true;
          companion.bCanPass = true;
          companion.bShootable = true;
          companion.health = 1;
          companion.MaxTargetRange = 2048;
          companion.A_SetSpecies("Companion");
          companion.ApplyDamageFactor("Companion", 0.0);

          GlobalVariables g;
          g = GlobalVariables(EventHandler.Find("GlobalVariables"));
          g.companions.Push(companion);

          let p = players[PlayerNumber()].mo;
          companion.Angle = p.Angle;
          companion.movedir = Utilities.angleToMoveDir(p.Angle);
          companion.TryWalk();
          p.TakeInventory("CompanionAmmo", cameraheight);
        }else{
          console.printf("Not enough money");
        }
      }
      Stop;
  }
}

Class MarineCompanionFlameThrowerItem : CommonItemFeatures
{
  Default
  {
    Inventory.PickupMessage "Got a Flame Thrower Marine!";
    Tag "Flame Thrower Marine";
  }
  States
  {
    Spawn:
      AL16 A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        if(p.CountInv("CompanionAmmo") >= 69){
          Actor companion = Actor.Spawn("MarineCompanionFlameThrower", pos);
          companion.bFriendly = true;
          companion.bQuickToRetaliate = true;
          companion.bSlidesOnWalls = true;
          companion.bNoBlockMonst = true;
          companion.bCountKill = false;
          companion.bAlwaysFast = true;
          companion.bMissileMore = true;
          companion.bMissileEvenMore = true;
          companion.bHarmFriends = false;
          companion.bDontHarmSpecies = true;
          companion.bIsMonster = true;
          companion.bSolid = true;
          companion.bCanPushWalls = true;
          companion.bCanUseWalls = true;
          companion.bCanPass = true;
          companion.bShootable = true;
          companion.health = 1;
          companion.MaxTargetRange = 2048;
          companion.A_SetSpecies("Companion");
          companion.ApplyDamageFactor("Companion", 0.0);

          GlobalVariables g;
          g = GlobalVariables(EventHandler.Find("GlobalVariables"));
          g.companions.Push(companion);

          let p = players[PlayerNumber()].mo;
          companion.Angle = p.Angle;
          companion.movedir = Utilities.angleToMoveDir(p.Angle);
          companion.TryWalk();
          p.TakeInventory("CompanionAmmo", cameraheight);
        }else{
          console.printf("Not enough money");
        }
      }
      Stop;
  }
}

Class MarineCompanionMGItem : CommonItemFeatures
{
  Default
  {
    Inventory.PickupMessage "Got a Machine Gun Marine!";
    Tag "Machine Gun Marine";
  }
  States
  {
    Spawn:
      ALY3 A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        if(p.CountInv("CompanionAmmo") >= 69){
          Actor companion = Actor.Spawn("MarineCompanionMG", pos);
          companion.bFriendly = true;
          companion.bQuickToRetaliate = true;
          companion.bSlidesOnWalls = true;
          companion.bNoBlockMonst = true;
          companion.bCountKill = false;
          companion.bAlwaysFast = true;
          companion.bMissileMore = true;
          companion.bMissileEvenMore = true;
          companion.bHarmFriends = false;
          companion.bDontHarmSpecies = true;
          companion.bIsMonster = true;
          companion.bSolid = true;
          companion.bCanPushWalls = true;
          companion.bCanUseWalls = true;
          companion.bCanPass = true;
          companion.bShootable = true;
          companion.health = 1;
          companion.MaxTargetRange = 2048;
          companion.A_SetSpecies("Companion");
          companion.ApplyDamageFactor("Companion", 0.0);

          GlobalVariables g;
          g = GlobalVariables(EventHandler.Find("GlobalVariables"));
          g.companions.Push(companion);

          let p = players[PlayerNumber()].mo;
          companion.Angle = p.Angle;
          companion.movedir = Utilities.angleToMoveDir(p.Angle);
          companion.TryWalk();
          p.TakeInventory("CompanionAmmo", cameraheight);
        }else{
          console.printf("Not enough money");
        }
      }
      Stop;
  }
}

Class MarineCompanionMinigunItem : CommonItemFeatures
{
  Default
  {
    Inventory.PickupMessage "Got a Minigun Marine!";
    Tag "Minigun Marine";
  }
  States
  {
    Spawn:
      ALY6 A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        if(p.CountInv("CompanionAmmo") >= 69){
          Actor companion = Actor.Spawn("MarineCompanionMinigun", pos);
          companion.bFriendly = true;
          companion.bQuickToRetaliate = true;
          companion.bSlidesOnWalls = true;
          companion.bNoBlockMonst = true;
          companion.bCountKill = false;
          companion.bAlwaysFast = true;
          companion.bMissileMore = true;
          companion.bMissileEvenMore = true;
          companion.bHarmFriends = false;
          companion.bDontHarmSpecies = true;
          companion.bIsMonster = true;
          companion.bSolid = true;
          companion.bCanPushWalls = true;
          companion.bCanUseWalls = true;
          companion.bCanPass = true;
          companion.bShootable = true;
          companion.health = 1;
          companion.MaxTargetRange = 2048;
          companion.A_SetSpecies("Companion");
          companion.ApplyDamageFactor("Companion", 0.0);

          GlobalVariables g;
          g = GlobalVariables(EventHandler.Find("GlobalVariables"));
          g.companions.Push(companion);

          let p = players[PlayerNumber()].mo;
          companion.Angle = p.Angle;
          companion.movedir = Utilities.angleToMoveDir(p.Angle);
          companion.TryWalk();
          p.TakeInventory("CompanionAmmo", cameraheight);
        }else{
          console.printf("Not enough money");
        }
      }
      Stop;
  }
}

class CompanionZombieManItem : CommonItemFeatures
{
  Default
  {
    Inventory.PickupMessage "Got a Zombie Man!";
    Tag "Zombie Man";
  }
  States
  {
    Spawn:
      POSS A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        if(p.CountInv("CompanionAmmo") >= 69){
          Actor companion = Actor.Spawn("CompanionZombieMan", pos);
          companion.bFriendly = true;
          companion.bQuickToRetaliate = true;
          companion.bSlidesOnWalls = true;
          companion.bNoBlockMonst = true;
          companion.bCountKill = false;
          companion.bAlwaysFast = true;
          companion.bMissileMore = true;
          companion.bMissileEvenMore = true;
          companion.bHarmFriends = false;
          companion.bDontHarmSpecies = true;
          companion.bIsMonster = true;
          companion.bSolid = true;
          companion.bCanPushWalls = true;
          companion.bCanUseWalls = true;
          companion.bCanPass = true;
          companion.bShootable = true;
          companion.health = 1;
          companion.MaxTargetRange = 2048;
          companion.A_SetSpecies("Companion");
          companion.ApplyDamageFactor("Companion", 0.0);

          GlobalVariables g;
          g = GlobalVariables(EventHandler.Find("GlobalVariables"));
          g.companions.Push(companion);

          let p = players[PlayerNumber()].mo;
          companion.Angle = p.Angle;
          companion.movedir = Utilities.angleToMoveDir(p.Angle);
          companion.TryWalk();
          p.TakeInventory("CompanionAmmo", cameraheight);
        }else{
          console.printf("Not enough money");
        }
      }
      Stop;
  }
}

class CompanionShotgunGuyItem : CommonItemFeatures
{
  Default
  {
    Inventory.PickupMessage "Got a Shotgun Guy!";
    Tag "Shotgun Guy";
  }
  States
  {
    Spawn:
      SPOS A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        if(p.CountInv("CompanionAmmo") >= 69){
          Actor companion = Actor.Spawn("CompanionShotgunGuy", pos);
          companion.bFriendly = true;
          companion.bQuickToRetaliate = true;
          companion.bSlidesOnWalls = true;
          companion.bNoBlockMonst = true;
          companion.bCountKill = false;
          companion.bAlwaysFast = true;
          companion.bMissileMore = true;
          companion.bMissileEvenMore = true;
          companion.bHarmFriends = false;
          companion.bDontHarmSpecies = true;
          companion.bIsMonster = true;
          companion.bSolid = true;
          companion.bCanPushWalls = true;
          companion.bCanUseWalls = true;
          companion.bCanPass = true;
          companion.bShootable = true;
          companion.health = 1;
          companion.MaxTargetRange = 2048;
          companion.A_SetSpecies("Companion");
          companion.ApplyDamageFactor("Companion", 0.0);

          GlobalVariables g;
          g = GlobalVariables(EventHandler.Find("GlobalVariables"));
          g.companions.Push(companion);

          let p = players[PlayerNumber()].mo;
          companion.Angle = p.Angle;
          companion.movedir = Utilities.angleToMoveDir(p.Angle);
          companion.TryWalk();
          p.TakeInventory("CompanionAmmo", cameraheight);
        }else{
          console.printf("Not enough money");
        }
      }
      Stop;
  }
}

class CompanionChaingunGuyItem : CommonItemFeatures
{
  Default
  {
    Inventory.PickupMessage "Got a Chaingun Guy!";
    Tag "Chaingun Guy";
  }
  States
  {
    Spawn:
      CPOS A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        if(p.CountInv("CompanionAmmo") >= 69){
          Actor companion = Actor.Spawn("CompanionChaingunGuy", pos);
          companion.bFriendly = true;
          companion.bQuickToRetaliate = true;
          companion.bSlidesOnWalls = true;
          companion.bNoBlockMonst = true;
          companion.bCountKill = false;
          companion.bAlwaysFast = true;
          companion.bMissileMore = true;
          companion.bMissileEvenMore = true;
          companion.bHarmFriends = false;
          companion.bDontHarmSpecies = true;
          companion.bIsMonster = true;
          companion.bSolid = true;
          companion.bCanPushWalls = true;
          companion.bCanUseWalls = true;
          companion.bCanPass = true;
          companion.bShootable = true;
          companion.health = 1;
          companion.MaxTargetRange = 2048;
          companion.A_SetSpecies("Companion");
          companion.ApplyDamageFactor("Companion", 0.0);

          GlobalVariables g;
          g = GlobalVariables(EventHandler.Find("GlobalVariables"));
          g.companions.Push(companion);

          let p = players[PlayerNumber()].mo;
          companion.Angle = p.Angle;
          companion.movedir = Utilities.angleToMoveDir(p.Angle);
          companion.TryWalk();
          p.TakeInventory("CompanionAmmo", cameraheight);
        }else{
          console.printf("Not enough money");
        }
      }
      Stop;
  }
}

class CompanionDemonItem : CommonItemFeatures
{
  Default
  {
    Inventory.PickupMessage "Got a Demon!";
    Tag "Demon";
  }
  States
  {
    Spawn:
      SARG A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        if(p.CountInv("CompanionAmmo") >= 69){
          Actor companion = Actor.Spawn("CompanionDemon", pos);
          companion.bFriendly = true;
          companion.bQuickToRetaliate = true;
          companion.bSlidesOnWalls = true;
          companion.bNoBlockMonst = true;
          companion.bCountKill = false;
          companion.bAlwaysFast = true;
          companion.bMissileMore = true;
          companion.bMissileEvenMore = true;
          companion.bHarmFriends = false;
          companion.bDontHarmSpecies = true;
          companion.bIsMonster = true;
          companion.bSolid = true;
          companion.bCanPushWalls = true;
          companion.bCanUseWalls = true;
          companion.bCanPass = true;
          companion.bShootable = true;
          companion.health = 1;
          companion.MaxTargetRange = 2048;
          companion.A_SetSpecies("Companion");
          companion.ApplyDamageFactor("Companion", 0.0);

          GlobalVariables g;
          g = GlobalVariables(EventHandler.Find("GlobalVariables"));
          g.companions.Push(companion);

          let p = players[PlayerNumber()].mo;
          companion.Angle = p.Angle;
          companion.movedir = Utilities.angleToMoveDir(p.Angle);
          companion.TryWalk();
          p.TakeInventory("CompanionAmmo", cameraheight);
        }else{
          console.printf("Not enough money");
        }
      }
      Stop;
  }
}

class CompanionSpectreItem : CompanionDemonItem
{
  Default
  {
    RenderStyle "OptFuzzy";
    Inventory.PickupMessage "Got a Spectre!";
    Tag "Spectre";
  }
}

class CompanionLostSoulItem : CommonItemFeatures
{
  Default
  {
    Scale 0.6;
    Inventory.PickupMessage "Got a Lost Soul!";
    Tag "Lost Soul";
  }
  States
  {
    Spawn:
      SKUL A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        if(p.CountInv("CompanionAmmo") >= 69){
          Actor companion = Actor.Spawn("CompanionLostSoul", pos);
          companion.bFriendly = true;
          companion.bQuickToRetaliate = true;
          companion.bSlidesOnWalls = true;
          companion.bNoBlockMonst = true;
          companion.bCountKill = false;
          companion.bAlwaysFast = true;
          companion.bMissileMore = true;
          companion.bMissileEvenMore = true;
          companion.bHarmFriends = false;
          companion.bDontHarmSpecies = true;
          companion.bIsMonster = true;
          companion.bSolid = true;
          companion.bCanPushWalls = true;
          companion.bCanUseWalls = true;
          companion.bCanPass = true;
          companion.bShootable = true;
          companion.health = 1;
          companion.MaxTargetRange = 2048;
          companion.A_SetSpecies("Companion");
          companion.ApplyDamageFactor("Companion", 0.0);

          GlobalVariables g;
          g = GlobalVariables(EventHandler.Find("GlobalVariables"));
          g.companions.Push(companion);

          let p = players[PlayerNumber()].mo;
          companion.Angle = p.Angle;
          companion.movedir = Utilities.angleToMoveDir(p.Angle);
          companion.TryWalk();
          p.TakeInventory("CompanionAmmo", cameraheight);
        }else{
          console.printf("Not enough money");
        }
      }
      Stop;
  }
}

class CompanionCacodemonItem : CommonItemFeatures
{
  Default
  {
    Scale 0.4;
    Inventory.PickupMessage "Got a Cacodemon!";
    Tag "Cacodemon";
  }
  States
  {
    Spawn:
      HEAD A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        if(p.CountInv("CompanionAmmo") >= 69){
          Actor companion = Actor.Spawn("CompanionCacodemon", pos);
          companion.bFriendly = true;
          companion.bQuickToRetaliate = true;
          companion.bSlidesOnWalls = true;
          companion.bNoBlockMonst = true;
          companion.bCountKill = false;
          companion.bAlwaysFast = true;
          companion.bMissileMore = true;
          companion.bMissileEvenMore = true;
          companion.bHarmFriends = false;
          companion.bDontHarmSpecies = true;
          companion.bIsMonster = true;
          companion.bSolid = true;
          companion.bCanPushWalls = true;
          companion.bCanUseWalls = true;
          companion.bCanPass = true;
          companion.bShootable = true;
          companion.health = 1;
          companion.MaxTargetRange = 2048;
          companion.A_SetSpecies("Companion");
          companion.ApplyDamageFactor("Companion", 0.0);

          GlobalVariables g;
          g = GlobalVariables(EventHandler.Find("GlobalVariables"));
          g.companions.Push(companion);

          let p = players[PlayerNumber()].mo;
          companion.Angle = p.Angle;
          companion.movedir = Utilities.angleToMoveDir(p.Angle);
          companion.TryWalk();
          p.TakeInventory("CompanionAmmo", cameraheight);
        }else{
          console.printf("Not enough money");
        }
      }
      Stop;
  }
}

class CompanionPainElementalItem : CommonItemFeatures
{
  Default
  {
    Scale 0.38;
    Inventory.PickupMessage "Got a Pain Elemental!";
    Tag "Pain Elemental";
  }
  States
  {
    Spawn:
      PAIN A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        if(p.CountInv("CompanionAmmo") >= 69){
          Actor companion = Actor.Spawn("CompanionPainElemental", pos);
          companion.bFriendly = true;
          companion.bQuickToRetaliate = true;
          companion.bSlidesOnWalls = true;
          companion.bNoBlockMonst = true;
          companion.bCountKill = false;
          companion.bAlwaysFast = true;
          companion.bMissileMore = true;
          companion.bMissileEvenMore = true;
          companion.bHarmFriends = false;
          companion.bDontHarmSpecies = true;
          companion.bIsMonster = true;
          companion.bSolid = true;
          companion.bCanPushWalls = true;
          companion.bCanUseWalls = true;
          companion.bCanPass = true;
          companion.bShootable = true;
          companion.health = 1;
          companion.MaxTargetRange = 2048;
          companion.A_SetSpecies("Companion");
          companion.ApplyDamageFactor("Companion", 0.0);

          GlobalVariables g;
          g = GlobalVariables(EventHandler.Find("GlobalVariables"));
          g.companions.Push(companion);

          let p = players[PlayerNumber()].mo;
          companion.Angle = p.Angle;
          companion.movedir = Utilities.angleToMoveDir(p.Angle);
          companion.TryWalk();
          p.TakeInventory("CompanionAmmo", cameraheight);
        }else{
          console.printf("Not enough money");
        }
      }
      Stop;
  }
}

class CompanionBaronOfHellItem : CommonItemFeatures
{
  Default
  {
    Scale 0.4;
    Inventory.PickupMessage "Got a Baron of Hell!";
    Tag "Baron of Hell";
  }
  States
  {
    Spawn:
      BOSS A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        if(p.CountInv("CompanionAmmo") >= 69){
          Actor companion = Actor.Spawn("CompanionBaronOfHell", pos);
          companion.bFriendly = true;
          companion.bQuickToRetaliate = true;
          companion.bSlidesOnWalls = true;
          companion.bNoBlockMonst = true;
          companion.bCountKill = false;
          companion.bAlwaysFast = true;
          companion.bMissileMore = true;
          companion.bMissileEvenMore = true;
          companion.bHarmFriends = false;
          companion.bDontHarmSpecies = true;
          companion.bIsMonster = true;
          companion.bSolid = true;
          companion.bCanPushWalls = true;
          companion.bCanUseWalls = true;
          companion.bCanPass = true;
          companion.bShootable = true;
          companion.health = 1;
          companion.MaxTargetRange = 2048;
          companion.A_SetSpecies("Companion");
          companion.ApplyDamageFactor("Companion", 0.0);

          GlobalVariables g;
          g = GlobalVariables(EventHandler.Find("GlobalVariables"));
          g.companions.Push(companion);

          let p = players[PlayerNumber()].mo;
          companion.Angle = p.Angle;
          companion.movedir = Utilities.angleToMoveDir(p.Angle);
          companion.TryWalk();
          p.TakeInventory("CompanionAmmo", cameraheight);
        }else{
          console.printf("Not enough money");
        }
      }
      Stop;
  }
}

class CompanionHellKnightItem : CompanionBaronOfHellItem
{
  Default
  {
    Scale 0.4;
    Inventory.PickupMessage "Got a Hell Knight!";
    Tag "Hell Knight";
  }
  States
  {
    Spawn:
      BOS2 A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        if(p.CountInv("CompanionAmmo") >= 69){
          Actor companion = Actor.Spawn("CompanionHellKnight", pos);
          companion.bFriendly = true;
          companion.bQuickToRetaliate = true;
          companion.bSlidesOnWalls = true;
          companion.bNoBlockMonst = true;
          companion.bCountKill = false;
          companion.bAlwaysFast = true;
          companion.bMissileMore = true;
          companion.bMissileEvenMore = true;
          companion.bHarmFriends = false;
          companion.bDontHarmSpecies = true;
          companion.bIsMonster = true;
          companion.bSolid = true;
          companion.bCanPushWalls = true;
          companion.bCanUseWalls = true;
          companion.bCanPass = true;
          companion.bShootable = true;
          companion.health = 1;
          companion.MaxTargetRange = 2048;
          companion.A_SetSpecies("Companion");
          companion.ApplyDamageFactor("Companion", 0.0);

          GlobalVariables g;
          g = GlobalVariables(EventHandler.Find("GlobalVariables"));
          g.companions.Push(companion);

          let p = players[PlayerNumber()].mo;
          companion.Angle = p.Angle;
          companion.movedir = Utilities.angleToMoveDir(p.Angle);
          companion.TryWalk();
          p.TakeInventory("CompanionAmmo", cameraheight);
        }else{
          console.printf("Not enough money");
        }
      }
      Stop;
  }
}

class CompanionArachnotronItem : CommonItemFeatures
{
  Default
  {
    Scale 0.3;
    Inventory.PickupMessage "Got an Arachnotron!";
    Tag "Arachnotron";
  }
  States
  {
    Spawn:
      BSPI A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        if(p.CountInv("CompanionAmmo") >= 69){
          Actor companion = Actor.Spawn("CompanionArachnotron", pos);
          companion.bFriendly = true;
          companion.bQuickToRetaliate = true;
          companion.bSlidesOnWalls = true;
          companion.bNoBlockMonst = true;
          companion.bCountKill = false;
          companion.bAlwaysFast = true;
          companion.bMissileMore = true;
          companion.bMissileEvenMore = true;
          companion.bHarmFriends = false;
          companion.bDontHarmSpecies = true;
          companion.bIsMonster = true;
          companion.bSolid = true;
          companion.bCanPushWalls = true;
          companion.bCanUseWalls = true;
          companion.bCanPass = true;
          companion.bShootable = true;
          companion.health = 1;
          companion.MaxTargetRange = 2048;
          companion.A_SetSpecies("Companion");
          companion.ApplyDamageFactor("Companion", 0.0);

          GlobalVariables g;
          g = GlobalVariables(EventHandler.Find("GlobalVariables"));
          g.companions.Push(companion);

          let p = players[PlayerNumber()].mo;
          companion.Angle = p.Angle;
          companion.movedir = Utilities.angleToMoveDir(p.Angle);
          companion.TryWalk();
          p.TakeInventory("CompanionAmmo", cameraheight);
        }else{
          console.printf("Not enough money");
        }
      }
      Stop;
  }
}

class CompanionArchvileItem : CommonItemFeatures
{
  Default
  {
    Scale 0.35;
    Inventory.PickupMessage "Got an Archvile!";
    Tag "Archvile";
  }
  States
  {
    Spawn:
      VILE A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        if(p.CountInv("CompanionAmmo") >= 69){
          Actor companion = Actor.Spawn("CompanionArchvile", pos);
          companion.bFriendly = true;
          companion.bQuickToRetaliate = true;
          companion.bSlidesOnWalls = true;
          companion.bNoBlockMonst = true;
          companion.bCountKill = false;
          companion.bAlwaysFast = true;
          companion.bMissileMore = true;
          companion.bMissileEvenMore = true;
          companion.bHarmFriends = false;
          companion.bDontHarmSpecies = true;
          companion.bIsMonster = true;
          companion.bSolid = true;
          companion.bCanPushWalls = true;
          companion.bCanUseWalls = true;
          companion.bCanPass = true;
          companion.bShootable = true;
          companion.health = 1;
          companion.MaxTargetRange = 2048;
          companion.A_SetSpecies("Companion");
          companion.ApplyDamageFactor("Companion", 0.0);

          GlobalVariables g;
          g = GlobalVariables(EventHandler.Find("GlobalVariables"));
          g.companions.Push(companion);

          let p = players[PlayerNumber()].mo;
          companion.Angle = p.Angle;
          companion.movedir = Utilities.angleToMoveDir(p.Angle);
          companion.TryWalk();
          p.TakeInventory("CompanionAmmo", cameraheight);
        }else{
          console.printf("Not enough money");
        }
      }
      Stop;
  }
}

class CompanionFatsoItem : CommonItemFeatures
{
  Default
  {
    Scale 0.4;
    Inventory.PickupMessage "Got a Mancubus!";
    Tag "Mancubus";
  }
  States
  {
    Spawn:
      FATT A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        if(p.CountInv("CompanionAmmo") >= 69){
          Actor companion = Actor.Spawn("CompanionFatso", pos);
          companion.bFriendly = true;
          companion.bQuickToRetaliate = true;
          companion.bSlidesOnWalls = true;
          companion.bNoBlockMonst = true;
          companion.bCountKill = false;
          companion.bAlwaysFast = true;
          companion.bMissileMore = true;
          companion.bMissileEvenMore = true;
          companion.bHarmFriends = false;
          companion.bDontHarmSpecies = true;
          companion.bIsMonster = true;
          companion.bSolid = true;
          companion.bCanPushWalls = true;
          companion.bCanUseWalls = true;
          companion.bCanPass = true;
          companion.bShootable = true;
          companion.health = 1;
          companion.MaxTargetRange = 2048;
          companion.A_SetSpecies("Companion");
          companion.ApplyDamageFactor("Companion", 0.0);

          GlobalVariables g;
          g = GlobalVariables(EventHandler.Find("GlobalVariables"));
          g.companions.Push(companion);

          let p = players[PlayerNumber()].mo;
          companion.Angle = p.Angle;
          companion.movedir = Utilities.angleToMoveDir(p.Angle);
          companion.TryWalk();
          p.TakeInventory("CompanionAmmo", cameraheight);
        }else{
          console.printf("Not enough money");
        }
      }
      Stop;
  }
}

class CompanionCyberdemonItem : CommonItemFeatures
{
  Default
  {
    Scale 0.3;
    Inventory.PickupMessage "Got a Cyberdemon!";
    Tag "Cyberdemon";
  }
  States
  {
    Spawn:
      CYBR A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        if(p.CountInv("CompanionAmmo") >= 69){
          Actor companion = Actor.Spawn("CompanionCyberdemon", pos);
          companion.bFriendly = true;
          companion.bQuickToRetaliate = true;
          companion.bSlidesOnWalls = true;
          companion.bNoBlockMonst = true;
          companion.bCountKill = false;
          companion.bAlwaysFast = true;
          companion.bMissileMore = true;
          companion.bMissileEvenMore = true;
          companion.bHarmFriends = false;
          companion.bDontHarmSpecies = true;
          companion.bIsMonster = true;
          companion.bSolid = true;
          companion.bCanPushWalls = true;
          companion.bCanUseWalls = true;
          companion.bCanPass = true;
          companion.bShootable = true;
          companion.health = 1;
          companion.MaxTargetRange = 2048;
          companion.A_SetSpecies("Companion");
          companion.ApplyDamageFactor("Companion", 0.0);

          GlobalVariables g;
          g = GlobalVariables(EventHandler.Find("GlobalVariables"));
          g.companions.Push(companion);

          let p = players[PlayerNumber()].mo;
          companion.Angle = p.Angle;
          companion.movedir = Utilities.angleToMoveDir(p.Angle);
          companion.TryWalk();
          p.TakeInventory("CompanionAmmo", cameraheight);
        }else{
          console.printf("Not enough money");
        }
      }
      Stop;
  }
}

class CompanionSpiderMastermindItem : CommonItemFeatures
{
  Default
  {
    Scale 0.15;
    Inventory.PickupMessage "Got a Spider Mastermind!";
    Tag "Spider Mastermind";
  }
  States
  {
    Spawn:
      SPID A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        if(p.CountInv("CompanionAmmo") >= 69){
          Actor companion = Actor.Spawn("CompanionSpiderMastermind", pos);
          companion.bFriendly = true;
          companion.bQuickToRetaliate = true;
          companion.bSlidesOnWalls = true;
          companion.bNoBlockMonst = true;
          companion.bCountKill = false;
          companion.bAlwaysFast = true;
          companion.bMissileMore = true;
          companion.bMissileEvenMore = true;
          companion.bHarmFriends = false;
          companion.bDontHarmSpecies = true;
          companion.bIsMonster = true;
          companion.bSolid = true;
          companion.bCanPushWalls = true;
          companion.bCanUseWalls = true;
          companion.bCanPass = true;
          companion.bShootable = true;
          companion.health = 1;
          companion.MaxTargetRange = 2048;
          companion.A_SetSpecies("Companion");
          companion.ApplyDamageFactor("Companion", 0.0);

          GlobalVariables g;
          g = GlobalVariables(EventHandler.Find("GlobalVariables"));
          g.companions.Push(companion);

          let p = players[PlayerNumber()].mo;
          companion.Angle = p.Angle;
          companion.movedir = Utilities.angleToMoveDir(p.Angle);
          companion.TryWalk();
          p.TakeInventory("CompanionAmmo", cameraheight);
        }else{
          console.printf("Not enough money");
        }
      }
      Stop;
  }
}

class CompanionWolfensteinSSItem : CommonItemFeatures
{
  Default
  {
    Inventory.PickupMessage "Got a Wolfenstein SS!";
    Tag "Wolfenstein SS";
  }
  States
  {
    Spawn:
      SSWV A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        if(p.CountInv("CompanionAmmo") >= 69){
          Actor companion = Actor.Spawn("CompanionWolfensteinSS", pos);
          companion.bFriendly = true;
          companion.bQuickToRetaliate = true;
          companion.bSlidesOnWalls = true;
          companion.bNoBlockMonst = true;
          companion.bCountKill = false;
          companion.bAlwaysFast = true;
          companion.bMissileMore = true;
          companion.bMissileEvenMore = true;
          companion.bHarmFriends = false;
          companion.bDontHarmSpecies = true;
          companion.bIsMonster = true;
          companion.bSolid = true;
          companion.bCanPushWalls = true;
          companion.bCanUseWalls = true;
          companion.bCanPass = true;
          companion.bShootable = true;
          companion.health = 1;
          companion.MaxTargetRange = 2048;
          companion.A_SetSpecies("Companion");
          companion.ApplyDamageFactor("Companion", 0.0);

          GlobalVariables g;
          g = GlobalVariables(EventHandler.Find("GlobalVariables"));
          g.companions.Push(companion);

          let p = players[PlayerNumber()].mo;
          companion.Angle = p.Angle;
          companion.movedir = Utilities.angleToMoveDir(p.Angle);
          companion.TryWalk();
          p.TakeInventory("CompanionAmmo", cameraheight);
        }else{
          console.printf("Not enough money");
        }
      }
      Stop;
  }
}

class CompanionRevenantItem : CommonItemFeatures
{
  Default
  {
    Scale 0.35;
    Inventory.PickupMessage "Got a Revenant!";
    Tag "Revenant";
  }
  States
  {
    Spawn:
      SKEL A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        if(p.CountInv("CompanionAmmo") >= 69){
          Actor companion = Actor.Spawn("CompanionRevenant", pos);
          companion.bFriendly = true;
          companion.bQuickToRetaliate = true;
          companion.bSlidesOnWalls = true;
          companion.bNoBlockMonst = true;
          companion.bCountKill = false;
          companion.bAlwaysFast = true;
          companion.bMissileMore = true;
          companion.bMissileEvenMore = true;
          companion.bHarmFriends = false;
          companion.bDontHarmSpecies = true;
          companion.bIsMonster = true;
          companion.bSolid = true;
          companion.bCanPushWalls = true;
          companion.bCanUseWalls = true;
          companion.bCanPass = true;
          companion.bShootable = true;
          companion.health = 1;
          companion.MaxTargetRange = 2048;
          companion.A_SetSpecies("Companion");
          companion.ApplyDamageFactor("Companion", 0.0);

          GlobalVariables g;
          g = GlobalVariables(EventHandler.Find("GlobalVariables"));
          g.companions.Push(companion);

          let p = players[PlayerNumber()].mo;
          companion.Angle = p.Angle;
          companion.movedir = Utilities.angleToMoveDir(p.Angle);
          companion.TryWalk();
          p.TakeInventory("CompanionAmmo", cameraheight);
        }else{
          console.printf("Not enough money");
        }
      }
      Stop;
  }
}

class CompanionDoomImpItem : CommonItemFeatures
{
  Default
  {
    Inventory.PickupMessage "Got an Imp!";
    Tag "Imp";
  }
  States
  {
    Spawn:
      TROO A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        if(p.CountInv("CompanionAmmo") >= 69){
          Actor companion = Actor.Spawn("CompanionDoomImp", pos);
          companion.bFriendly = true;
          companion.bQuickToRetaliate = true;
          companion.bSlidesOnWalls = true;
          companion.bNoBlockMonst = true;
          companion.bCountKill = false;
          companion.bAlwaysFast = true;
          companion.bMissileMore = true;
          companion.bMissileEvenMore = true;
          companion.bHarmFriends = false;
          companion.bDontHarmSpecies = true;
          companion.bIsMonster = true;
          companion.bSolid = true;
          companion.bCanPushWalls = true;
          companion.bCanUseWalls = true;
          companion.bCanPass = true;
          companion.bShootable = true;
          companion.health = 1;
          companion.MaxTargetRange = 2048;
          companion.A_SetSpecies("Companion");
          companion.ApplyDamageFactor("Companion", 0.0);

          GlobalVariables g;
          g = GlobalVariables(EventHandler.Find("GlobalVariables"));
          g.companions.Push(companion);

          let p = players[PlayerNumber()].mo;
          companion.Angle = p.Angle;
          companion.movedir = Utilities.angleToMoveDir(p.Angle);
          companion.TryWalk();
          p.TakeInventory("CompanionAmmo", cameraheight);
        }else{
          console.printf("Not enough money");
        }
      }
      Stop;
  }
}

Class BelphegorItem : CommonItemFeatures
{
  Default
  {
    Scale 0.4;
    Inventory.PickupMessage "Got a Belphegor!";
    Tag "Belphagor";
  }
  States
  {
    Spawn:
      BOS3 A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        if(p.CountInv("CompanionAmmo") >= 69){
          Actor companion = Actor.Spawn("Belphegor", pos);
          companion.bFriendly = true;
          companion.bQuickToRetaliate = true;
          companion.bSlidesOnWalls = true;
          companion.bNoBlockMonst = true;
          companion.bCountKill = false;
          companion.bAlwaysFast = true;
          companion.bMissileMore = true;
          companion.bMissileEvenMore = true;
          companion.bHarmFriends = false;
          companion.bDontHarmSpecies = true;
          companion.bIsMonster = true;
          companion.bSolid = true;
          companion.bCanPushWalls = true;
          companion.bCanUseWalls = true;
          companion.bCanPass = true;
          companion.bShootable = true;
          companion.health = 1;
          companion.MaxTargetRange = 2048;
          companion.A_SetSpecies("Companion");
          companion.ApplyDamageFactor("Companion", 0.0);

          GlobalVariables g;
          g = GlobalVariables(EventHandler.Find("GlobalVariables"));
          g.companions.Push(companion);

          let p = players[PlayerNumber()].mo;
          companion.Angle = p.Angle;
          companion.movedir = Utilities.angleToMoveDir(p.Angle);
          companion.TryWalk();
          p.TakeInventory("CompanionAmmo", cameraheight);
        }else{
          console.printf("Not enough money");
        }
      }
      Stop;
  }
}

Class AfritItem : CommonItemFeatures
{
  Default
  {
    Inventory.PickupMessage "Got an Afrit!";
    Inventory.Icon "FRITV0";
    Scale 0.25;
    Tag "Afrit";
  }
  States
  {
    Spawn:
      FRIT A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        if(p.CountInv("CompanionAmmo") >= 69){
          Actor companion = Actor.Spawn("Afrit", pos);
          companion.bFriendly = true;
          companion.bQuickToRetaliate = true;
          companion.bSlidesOnWalls = true;
          companion.bNoBlockMonst = true;
          companion.bCountKill = false;
          companion.bAlwaysFast = true;
          companion.bMissileMore = true;
          companion.bMissileEvenMore = true;
          companion.bHarmFriends = false;
          companion.bDontHarmSpecies = true;
          companion.bIsMonster = true;
          companion.bSolid = true;
          companion.bCanPushWalls = true;
          companion.bCanUseWalls = true;
          companion.bCanPass = true;
          companion.bShootable = true;
          companion.health = 1;
          companion.MaxTargetRange = 2048;
          companion.A_SetSpecies("Companion");
          companion.ApplyDamageFactor("Companion", 0.0);

          GlobalVariables g;
          g = GlobalVariables(EventHandler.Find("GlobalVariables"));
          g.companions.Push(companion);

          let p = players[PlayerNumber()].mo;
          companion.Angle = p.Angle;
          companion.movedir = Utilities.angleToMoveDir(p.Angle);
          companion.TryWalk();
          p.TakeInventory("CompanionAmmo", cameraheight);
        }else{
          console.printf("Not enough money");
        }
      }
      Stop;
  }
}

Class MarauderItem : CommonItemFeatures
{
  Default
  {
    Scale 0.48;
    Inventory.PickupMessage "Got a Marauder!";
    Tag "Marauder";
  }
  States
  {
    Spawn:
      MAUD A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        if(p.CountInv("CompanionAmmo") >= 69){
          Actor companion = Actor.Spawn("Marauder", pos);
          companion.bFriendly = true;
          companion.bQuickToRetaliate = true;
          companion.bSlidesOnWalls = true;
          companion.bNoBlockMonst = true;
          companion.bCountKill = false;
          companion.bAlwaysFast = true;
          companion.bMissileMore = true;
          companion.bMissileEvenMore = true;
          companion.bHarmFriends = false;
          companion.bDontHarmSpecies = true;
          companion.bIsMonster = true;
          companion.bSolid = true;
          companion.bCanPushWalls = true;
          companion.bCanUseWalls = true;
          companion.bCanPass = true;
          companion.bShootable = true;
          companion.health = 1;
          companion.MaxTargetRange = 2048;
          companion.A_SetSpecies("Companion");
          companion.ApplyDamageFactor("Companion", 0.0);

          GlobalVariables g;
          g = GlobalVariables(EventHandler.Find("GlobalVariables"));
          g.companions.Push(companion);

          let p = players[PlayerNumber()].mo;
          companion.Angle = p.Angle;
          companion.movedir = Utilities.angleToMoveDir(p.Angle);
          companion.TryWalk();
          p.TakeInventory("CompanionAmmo", cameraheight);
        }else{
          console.printf("Not enough money");
        }
      }
      Stop;
  }
}

Class ArachnophyteItem : CommonItemFeatures
{
  Default
  {
    Scale 0.2;
    Inventory.PickupMessage "Got an Arachnophyte!";
    Tag "Arachnophyte";
  }
  States
  {
    Spawn:
      MAUD A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        if(p.CountInv("CompanionAmmo") >= 69){
          Actor companion = Actor.Spawn("Arachnophyte", pos);
          companion.bFriendly = true;
          companion.bQuickToRetaliate = true;
          companion.bSlidesOnWalls = true;
          companion.bNoBlockMonst = true;
          companion.bCountKill = false;
          companion.bAlwaysFast = true;
          companion.bMissileMore = true;
          companion.bMissileEvenMore = true;
          companion.bHarmFriends = false;
          companion.bDontHarmSpecies = true;
          companion.bIsMonster = true;
          companion.bSolid = true;
          companion.bCanPushWalls = true;
          companion.bCanUseWalls = true;
          companion.bCanPass = true;
          companion.bShootable = true;
          companion.health = 1;
          companion.MaxTargetRange = 2048;
          companion.A_SetSpecies("Companion");
          companion.ApplyDamageFactor("Companion", 0.0);

          GlobalVariables g;
          g = GlobalVariables(EventHandler.Find("GlobalVariables"));
          g.companions.Push(companion);

          let p = players[PlayerNumber()].mo;
          companion.Angle = p.Angle;
          companion.movedir = Utilities.angleToMoveDir(p.Angle);
          companion.TryWalk();
          p.TakeInventory("CompanionAmmo", cameraheight);
        }else{
          console.printf("Not enough money");
        }
      }
      Stop;
  }
}

Class ArchonOfHellItem : CommonItemFeatures
{
  Default
  {
    Scale 0.4;
    Inventory.PickupMessage "Got an Archon of Hell!";
    Tag "Archon of Hell";
  }
  States
  {
    Spawn:
      MAUD A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        if(p.CountInv("CompanionAmmo") >= 69){
          Actor companion = Actor.Spawn("ArchonOfHell", pos);
          companion.bFriendly = true;
          companion.bQuickToRetaliate = true;
          companion.bSlidesOnWalls = true;
          companion.bNoBlockMonst = true;
          companion.bCountKill = false;
          companion.bAlwaysFast = true;
          companion.bMissileMore = true;
          companion.bMissileEvenMore = true;
          companion.bHarmFriends = false;
          companion.bDontHarmSpecies = true;
          companion.bIsMonster = true;
          companion.bSolid = true;
          companion.bCanPushWalls = true;
          companion.bCanUseWalls = true;
          companion.bCanPass = true;
          companion.bShootable = true;
          companion.health = 1;
          companion.MaxTargetRange = 2048;
          companion.A_SetSpecies("Companion");
          companion.ApplyDamageFactor("Companion", 0.0);

          GlobalVariables g;
          g = GlobalVariables(EventHandler.Find("GlobalVariables"));
          g.companions.Push(companion);

          let p = players[PlayerNumber()].mo;
          companion.Angle = p.Angle;
          companion.movedir = Utilities.angleToMoveDir(p.Angle);
          companion.TryWalk();
          p.TakeInventory("CompanionAmmo", cameraheight);
        }else{
          console.printf("Not enough money");
        }
      }
      Stop;
  }
}

Class MurderBallItem : CommonItemFeatures
{
  Default
  {
    Inventory.PickupMessage "Got a Murder Ball!";
  }
  States
  {
    Spawn:
      BERS A -1;
      Stop;
    Use:
      TNT1 A 0
      {
        let p = players[PlayerNumber()].mo;
        if(p.CountInv("CompanionAmmo") >= 69){
          Actor companion = Actor.Spawn("MurderBall", pos);
          companion.bFriendly = true;
          companion.bQuickToRetaliate = true;
          companion.bSlidesOnWalls = true;
          companion.bNoBlockMonst = true;
          companion.bCountKill = false;
          companion.bAlwaysFast = true;
          companion.bMissileMore = true;
          companion.bMissileEvenMore = true;
          companion.bHarmFriends = false;
          companion.bDontHarmSpecies = true;
          companion.bIsMonster = true;
          companion.bSolid = true;
          companion.bCanPushWalls = true;
          companion.bCanUseWalls = true;
          companion.bCanPass = true;
          companion.bShootable = true;
          companion.health = 1;
          companion.MaxTargetRange = 2048;
          companion.A_SetSpecies("Companion");
          companion.ApplyDamageFactor("Companion", 0.0);

          GlobalVariables g;
          g = GlobalVariables(EventHandler.Find("GlobalVariables"));
          g.companions.Push(companion);

          let p = players[PlayerNumber()].mo;
          companion.Angle = p.Angle;
          companion.movedir = Utilities.angleToMoveDir(p.Angle);
          companion.TryWalk();
          p.TakeInventory("CompanionAmmo", cameraheight);
        }else{
          console.printf("Not enough money");
        }
      }
      Stop;
  }
}