Class Hierophant : Actor
{
  int Missile3Itr; //Iterator variable for Missile3 attack.

  Default
  {
    +FRIENDLY
    Species "Companion";
    DamageFactor "Companion", 0;
    Health 1800;
    Radius 24;
    Height 60;
    Mass 1000;
    Speed 10;
    PainChance 24;
    Obituary "%o was hexed by a Hierophant.";
    HitObituary "%o got shredded by a Hierophant.";
    SeeSound "monster/Hiesit";
    PainSound "monster/Hiepai";
    DeathSound "monster/Hiedth";
    ActiveSound "monster/Hieact";

    Monster;
    +NoTarget
    +FloorClip
    +MissileMore
    +NoRadiusDmg
    +Boss
    +Float
    +NoGravity
    +DontHarmClass
  }


  States
  {
    Spawn:
      HIER AC 10 A_Look();
      Loop;
    See:
      HIER AABBAACCDDCC 4 A_Chase();
      HIER A 0 A_Jump(64, "Blur");
      Loop;
    Blur:
      HIER A 1 A_StartSound("monster/blur");
      HIER AAAAAAAAAAAAAAAAAAAAAAAA 1 HeiroBlurChase();
      Goto See;
    Missile:
    MissileDecide:
      HIER A 0 A_Jump(256, "Missile1", "Missile2", "Missile3");
    Missile1:
      HIER EF 7 Bright A_FaceTarget();
      TNT1 A 0 A_AlertMonsters(0, AMF_TARGETEMITTER);
      HIER G 0 Bright A_SpawnProjectile("HieroBall1", 26.0, 0, Random(-6, -1));
      HIER G 7 Bright A_SpawnProjectile("HieroBall1", 26.0, 0, Random( 1,  6));
      HIER A 3 Bright;
      HIER HI 7 Bright A_FaceTarget();
      TNT1 A 0 A_AlertMonsters(0, AMF_TARGETEMITTER);
      HIER J 0 Bright A_SpawnProjectile("HieroBall1", 26.0, 0, Random(-6, -1));
      HIER J 7 Bright A_SpawnProjectile("HieroBall1", 26.0, 0, Random( 1,  6));
      HIER A 3 A_SpidRefire();
      HIER A 0 A_Jump(64, "Missile1");
      Goto See;
    Missile2:
      HIER EF 7 Bright A_FaceTarget();
      TNT1 A 0 A_AlertMonsters(0, AMF_TARGETEMITTER);
      HIER G 7 Bright A_SpawnProjectile("CurseBall", 26.0);
      HIER A 3 A_SpidRefire();
      HIER A 0 A_Jump(128, "Missile1", "Missile3");
      Goto See;
    Missile3:
      HIER KLM 5 Bright A_FaceTarget();
    Missile3LoopPrep:
      HIER A 0 { Missile3Itr = 0; }
    Missile3Loop:
      TNT1 A 0 A_AlertMonsters(0, AMF_TARGETEMITTER);
      HIER N 1 Bright A_SpawnProjectile("HieroBall2");
      HIER O 1 Bright A_FaceTarget();
      HIER A 0
      {
          Missile3Itr++;
          if( Missile3Itr<15 )
              return ResolveState("Missile3Loop");
            return ResolveState(null);
      }
      HIER L 5;
      Goto See;
    Melee:
    LeftSlash:
      TNT1 A 0 A_AlertMonsters(0, AMF_TARGETEMITTER);
      HIER EF 8 A_FaceTarget();
      HIER G 3 A_CustomMeleeAttack(10 * Random(1, 8), "baron/melee", "", "Companion");
      HIER A 3;
      HIER A 0 A_Jump(128, "RightSlash");
      Goto See;
    RightSlash:
      TNT1 A 0 A_AlertMonsters(0, AMF_TARGETEMITTER);
      HIER HI 8 A_FaceTarget();
      HIER J 3 A_CustomMeleeAttack(10 * Random(1, 8), "baron/melee", "", "Companion");
      HIER A 3;
      Goto See;
    Pain:
      HIER P 2;
      HIER P 2 A_Pain();
      Goto See;
    Death:
      HIER Q 6;
      HIER R 6 A_Scream();
      HIER S 6 A_NoBlocking();
      HIER TUVW 6;
      HIER X -1 A_SetFloorClip();
      Stop;
  }

    void HeiroBlurChase()
    {
        A_SpawnItemEx("HieroFX", 0,0,0, 0,0,0, 0, SXF_CLIENTSIDE);
        A_Chase();
    }
}

Class HieroFX : Actor // Blur effect.
{
    Default
    {
        RenderStyle "Translucent";
        Alpha 0.8;

        +NoInteraction
    }

    States
    {
    Spawn:
        TNT1 A 3;
        HIER A 5 A_FadeOut();
        Wait;
    }
}

// -------------------------------------------------------------------------------------------
//
//   Hierophant -- Fireballs
//
// -------------------------------------------------------------------------------------------

Class HieroBall1 :CompanionBaronBall
{
  Default
  {
    Species "Companion";
    DamageType "Companion";
    Speed 20;
    Damage 10;
    Decal "RevenantScorch";

    +ThruGhost
    +ForceXYBillBoard
  }

  States
  {
    Spawn:
      HIB1 AB 4 Bright;
      Loop;
    Death:
      HIB1 C 3 Bright A_SetTranslucent(0.75, 1);
      HIB1 D 3 Bright A_Explode(32, 32, XF_EXPLICITDAMAGETYPE, false, 0, 0, 10, "CompanionBulletPuff", "Companion");
      HIB1 EFG 3 Bright;
      Stop;
  }
}

Class HieroBall2 : BishopFX
{
  Default
  {
    Species "Companion";
    DamageType "Companion";
    Speed 16;
    Damage 6;
    Seesound "weapons/firmfi";
    DeathSound "weapons/firex5";
    Decal "PlasmaScorchLower";

      +ThruGhost
      +ForceXYBillBoard
  }

  States
  {
    Spawn:
      HIB2 ABCD 1 Bright A_Weave(3, 3, 1.0, 1.0);
      HIB2 A 0 Bright A_SeekerMissile(5, 6);
      Loop;
    Death:
      HIB2 E 0 Bright A_SetTranslucent(0.75, 1);
      HIB2 EFGHIJ 3 Bright;
      Stop;
  }
}

Class CurseBall : CompanionBaronBall
{
  //Constants for handling curses. If you want to add more curses, here's where you do it.
  const CURSE_NUM = 2; //Number of curses (minus 1 because arrays count starting from 0)

  // 0 = Weaken, 1 = AmpDMG, 2 = Slow
  static const string CURSE_GIVER[]   = { "HieroWeaken", "HieroAmpDMG", "HieroSlow" }; //Array for PowerupGivers, this is what we give
  static const string CURSE_POWER[]   = { "PowerWeaken", "PowerAmpDMG", "PowerSlow2" }; //Array for the powerups themselves, this is what we check for
  static const string CURSE_MESSAGE[] = { "\c[Cyan]Your weapons weaken.", "\c[Red]Your defenses weaken.", "\c[Yellow]Your legs feel heavy." }; //Array for the messages to print
  //Split into three arrays rather than a multidimensional array, because there is (as of now) no support for multidimensional constant arrays

  Default
  {
    Species "Companion";
    DamageType "Companion";
    Speed 20;
    DamageFunction 20;
    Alpha 0.9;
    SeeSound "monster/curse1";
    DeathSound "monster/curse2";
    Decal "MummyScorch";

    +ThruGhost
    +ForceXYBillBoard
    +NoDamageThrust
    +SeekerMissile
    +HitMaster
  }

  States
  {
    Spawn:
      CURS A 2 Bright A_SpawnItemEx("CurseTrail", 0, 0, 0, 0, 0, 0, 0, SXF_CLIENTSIDE);
      CURS A 0 Bright A_SeekerMissile(6, 7);
      CURS B 2 Bright A_SpawnItemEx("CurseTrail", 0, 0, 0, 0, 0, 0, 0, SXF_CLIENTSIDE);
      CURS B 0 Bright A_SeekerMissile(6, 7);
      CURS C 2 Bright A_SpawnItemEx("CurseTrail", 0, 0, 0, 0, 0, 0, 0, SXF_CLIENTSIDE);
      CURS C 0 Bright A_SeekerMissile(6, 7);
      CURS D 2 Bright A_SpawnItemEx("CurseTrail", 0, 0, 0, 0, 0, 0, 0, SXF_CLIENTSIDE);
      CURS D 0 Bright A_SeekerMissile(6, 7);
      Loop;
    Death:
      CURS E 0 Bright A_SetTranslucent(0.8, 1);
      //CURS E 3 Bright ACS_NamedExecuteWithResult("Hiero_InflictCurse"); //Old method using ACS.
      CURS E 3 Bright InflictCurse(target);
      CURS FGHI 3 Bright;
      Stop;
  }

  void InflictCurse( Actor cursee ) //I know we're only doing stuff to Master with this, but passing in a pointer makes this easier to adapt for other things.
  {
    If( IsCurseable(cursee) )
    {
      // Randomly pick a curse to inflict.
      int curse = Random(0, CURSE_NUM);

      // PowerSpeed, which the Slow curse is based on, only works on players. So for non-players,
      // i.e monsters in this case, pick one of the other curses instead.
      If(!(cursee is "PlayerPawn"))
        While(curse == 2) //while Slow is selected
          curse = Random(0, CURSE_NUM);

      // Print the curse message only if this actor (player) is not currently under the effect of this curse.
      If( (cursee is "PlayerPawn") && !cursee.CheckInventory(CURSE_POWER[curse], 1))
        cursee.A_Print(CURSE_MESSAGE[curse]);

      // Debuff the actor.
      cursee.A_GiveInventory(CURSE_GIVER[curse], 1);
    }
  }

  bool IsCurseable( Actor cursee ) //I know we're only ever checking Master with this, but passing in a pointer makes this easier to adapt for other things.
  {
    if
    (
      cursee &&                                             //If the pointer exists
      (cursee.bIsMonster || (cursee is "PlayerPawn")) &&    //Victim is either a monster or a player
      !cursee.bKilled &&                                     //Victim must be alive
      !cursee.bInvulnerable &&                               //Victim must not be invulnerable
      cursee.GetSpecies()!=target.GetSpecies()
    ){            //Victim and shooter must be of different species
      return true;  //Then the victim is curseable
    }
    return false; //Otherwise it isn't curseable
  }
}

Class CurseTrail : Actor
{
  Default
  {
    RenderStyle "Add";
    Alpha 0.8;

    +ForceXYBillBoard;
    +NoInteraction;
  }

  States
  {
    Spawn:
      TNT1 A 3;
      CURS JLMNOPR 3 Bright;
      Stop;
  }
}

// -------------------------------------------------------------------------------------------
//
//   Hierophant -- The Deadly Curses!
//
// -------------------------------------------------------------------------------------------

Class PowerWeaken : PowerDamage
{
  Default
  {
    DamageFactor "Companion", 0.5;
  }
}

Class PowerAmpDMG : PowerProtection
{
  Default
  {
    DamageFactor "Companion", 2.0;
  }
}

Class PowerSlow2 : PowerSpeed
{
  Default
  {
    Speed 0.5;
  }
}

// --------------------------------------------------------------------------------------

Class HieroCurseGiver : PowerupGiver // Base class for the following actors.
{
  Default
  {
    Inventory.MaxAmount 0;
    Powerup.Duration -10;
    +Inventory.AutoActivate
    +Inventory.AlwaysPickup
  }
}

Class HieroWeaken : HieroCurseGiver
{
  Default
  {
    Powerup.Color "Cyan", 0.33;
    Powerup.Type "PowerWeaken";
  }
}

Class HieroAmpDMG : HieroCurseGiver
{
  Default
  {
    Powerup.Color "Red", 0.33;
    Powerup.Type "PowerAmpDMG";
  }
}

Class HieroSlow : HieroCurseGiver
{
  Default
  {
    Powerup.Color "Yellow", 0.33;
    Powerup.Type "PowerSlow2";
  }
}
