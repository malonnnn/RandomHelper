Class ForgottenOne : Actor
{
  Default
  {
    +FRIENDLY
    Species "Companion";
    DamageFactor "Companion", 0;
    Obituary "A Forgotten One rammed %o";
    Health 40;
    Radius 14;
    Height 30;
    Mass 50;
    Speed 8;
    PainChance 230;
    Scale 0.7;
    PainSound "Forgotten/Pain";
    DeathSound "Forgotten/Death";
    ActiveSound "Forgotten/Active";
    Damage 3;
    Monster;
    +FloorClip
    +Float
    +NoGravity
    +NoIceDeath
    +DontFall
    +FloatBob
    +NoBlood
  }
  States
  {
    Spawn:
      FRGO A 0 Bright;
      FRGO A 0 Bright
      {
        bFloatBob = true;
      }
      FRGO AAAAAABBBBBB 1 Bright A_Look;
      Loop;
    See:
      FRGO A 0
      {
        bFloatBob = true;
      }
      FRGO AABB 3 Bright A_Chase;
      Loop;
    Missile:
      FRGO C 0
      {
        bFloatBob = false;
      }
      FRGO CCDDC 2 Bright A_FaceTarget;
      FRGO D 0 Bright A_StartSound("Forgotten/Attack");
      FRGO D 2 Bright
      {
        A_AlertMonsters(0, AMF_TARGETEMITTER);
        A_SkullAttack();
      }
      FRGO C 2 Bright;
      FRGO C 0 Bright A_JumpIfTargetInLOS(4, 75);
      FRGO C 0 A_Jump(24, "StopCharge");
      FRGO DC 2 Bright;
      Goto Missile+10;
      FRGO C 0 Bright;
      Goto Missile+7;
    StopCharge:
      FRGO C 0 A_Stop;
      Goto See;
    Pain:
      FRGO E 0
      {
        bFloatBob = true;
      }
      FRGO E 3 Bright;
      FRGO E 3 Bright A_Pain;
      Goto See;
    Death:
      FRGO E 0
      {
        bFloatBob = false;
      }
      FRGO E 0 A_Stop;
      FRGO EF 4 Bright;
      FRGO G 6 Bright A_Scream;
      FRGO H 6 Bright;
      FRGO I 6 Bright A_NoBlocking;
      FRGO J 6 Bright;
      Stop;
  }

  override bool Slam(Actor victim)
  {
    bSkullFly = false;
    vel = (0, 0, 0);
    if (health > 0)
    {
      if (!bDormant)
      {
        int dam = GetMissileDamage (7, 1);
        int newdam = victim.DamageMobj (self, self, dam, "Companion");
        victim.TraceBleed (newdam > 0 ? newdam : dam, self);
        if (health > 0)
        {
          if (SeeState != NULL && !bRetargetAfterSlam){
            SetState (SeeState);
          }else{
            SetIdle();
          }
        }
      }
      else
      {
        SetIdle();
        tics = -1;
      }
    }
    return false;
  }
}