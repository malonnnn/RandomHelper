Class DeathIncarnate : Actor
{
  Default
  {
    MONSTER;
    +FRIENDLY
    Species "Companion";
    DamageFactor "Companion", 0;
    Health 300;
    Radius 20;
    Height 56;
    Mass 500;
    Speed 12;
    PainChance 64;
    Damagefactor "IncarnateShot", 0;
    Obituary "%o was killed by a Death Incarnate's glare.";
    HitObituary "%o was beaten to death by a Death Incarnate.";
    SeeSound "monster/incsit";
    PainSound "skeleton/pain";
    DeathSound "monster/incdth";
    ActiveSound "monster/incact";
    AttackSound "monster/incatk";
    +FLOORCLIP
    +SHORTMISSILERANGE
    +DONTHARMCLASS
  }

  States
  {
    Spawn:
      INCA AB 10 A_Look();
      Loop;
    See:
      INCA AABBCCDDEEFF 2 A_Chase();
      Loop;
    Melee:
      TNT1 A 0 A_AlertMonsters(0, AMF_TARGETEMITTER);
      INCA G 0 A_Jump(128, "Melee2");
      INCA G 0 A_FaceTarget();
      INCA G 6 A_SkelWhoosh();
      INCA H 6 A_FaceTarget();
      INCA I 6 A_CustomMeleeAttack(7*random(1,8), "monster/inchit", "Companion");
      Goto See;
    Melee2:
      INCA R 0 A_FaceTarget();
      INCA R 5 A_SkelWhoosh();
      INCA S 5 A_FaceTarget();
      INCA T 5 A_CustomMeleeAttack(7*random(1,8), "monster/inchit", "Companion");
      INCA G 0 A_FaceTarget();
      INCA G 5 A_SkelWhoosh();
      INCA H 5 A_FaceTarget();
      INCA I 5 A_CustomMeleeAttack(7*random(1,8), "monster/inchit", "Companion");
      Goto See;
    Missile:
      TNT1 A 0 A_AlertMonsters(0, AMF_TARGETEMITTER);
      INCA J 5 A_FaceTarget();
      INCA J 5;
      INCA U 10 Bright A_CustomBulletAttack(30,0,5,3,"DIpuff",1024);
      INCA K 10;
      Goto See;
    Pain:
      INCA L 5;
      INCA L 5 A_Pain();
      Goto See;
    Death:
      INCA L 0 A_Jump(192, "Death2");
      INCA LM 7;
      INCA N 7 A_Scream();
      INCA O 7 A_NoBlocking();
      INCA P 7;
      INCA Q -1;
      Stop;
    Death2: //Can revive
      INCA LM 7;
      INCA N 7 A_Scream();
      INCA O 7 A_NoBlocking();
      INCA P 7;
      INCA Q 0 A_Jump(192,4);
      INCA Q 0 A_Jump(128,4);
      INCA Q 0 A_Jump(96,4);
      INCA Q 0 A_Jump(64,4);
      INCA Q 115;
      INCA Q 115;
      INCA Q 115;
      INCA Q 115;
      INCA Q 115;
      INCA Q -1 Thing_Raise(0);
      Stop;
    XDeath:
      INCX A 10 Bright A_StartSound("monster/incexp");
      INCX BC 5 Bright;
      INCX D 5 Bright A_NoBlocking();
      INCX D 0 Bright
      {
        //A_SpawnItem("HS",0,32);
        let g = Globals(EventHandler.Find("Globals"));
        g.createCompanion("HS", pos);
      }
      INCX EFGHIJ 5 Bright;
      INCX K -1;
    Raise:
      INCA Q 0 A_KillChildren();
      INCA QPONML 5;
      Goto See;
  }
}


//new visible puff
Class DIPuff : Actor
{
  Default
  {
    Species "Companion";
    DamageType "Companion";
    RENDERSTYLE "Add";
    +NOBLOCKMAP;
    +NOGRAVITY;
    +RANDOMIZE;
    +PUFFONACTORS;
    +DontHarmSpecies
    -HarmFriends
    -DoHarmSpecies
  }

  States
  {
    Spawn:
      INPF ABCDE 3 Bright;
      Stop;
  }
}


//old invisible puff
/*Class DIPuff : actor
{
  Default
  {
    Radius 0;
    Height 1;
    Speed 0;
    RENDERSTYLE "NONE";
    DamageType "IncarnateShot";
    PROJECTILE;
  }

  States
  {
  Spawn:
    TNT1 A 2 Bright;
    Stop;
  }
}*/
//End of Incarnate





//Hades Sphere
Class HS : Actor
{
  Default
  {
    Monster;
    +FRIENDLY
    Species "Companion";
    DamageFactor "Companion", 0;
    Health 35;
    Radius 24;
    Height 48;
    Mass 3000;
    Speed 10;
    Obituary "%o was blown away by a Hades Sphere.";
    SeeSound "monster/hadsit";
    DeathSound "monster/hadexp";
    +LOOKALLAROUND
    +DONTGIB
    +NOTARGET
    +NOGRAVITY
    +FLOAT
    +DONTFALL
    //+DONTHARMCLASS // [MagicWazard] See "notes" below
  }

  States
  {
    Spawn:
      TNT1 A 1 Bright A_Look();
      Loop;
    See:
      HADE EFGH 4 Bright;
    SeeLoop:
      HADE A 2 Bright A_StartSound("monster/hadwlk");
      HADE ABBCCDD 2 Bright HS_SpecialChase();  // [Blue Shadow] Conditional A_Chase
      TNT1 A 0
      {
        if(!random(0, 7) && !bSkullfly) //A_Jump(32, "TeleportOut") when the SKULLFLY flag is off
          return ResolveState("TeleportOut");
        return ResolveState(null);
      }
      Loop;
    TeleportOut:
      TNT1 A 0 A_UnSetSolid();
      TNT1 A 0 A_UnSetShootable();
      HADE H 5 Bright A_StartSound("monster/hadtel");
      HADE GFEIJKL 4 Bright;
    SeeTeleport:
      TNT1 AAAAAAAA 2 A_Chase(null, null);
      TNT1 A 0 A_Jump(96, "TeleportIn");
      Loop;
    TeleportIn:
      HADE L 3 Bright A_StartSound("monster/hadtel");
      HADE KJIEFG 4 Bright;
      TNT1 A 0 A_SetShootable();
      TNT1 A 0 A_SetSolid();
      Goto SeeLoop;
    Melee:
      TNT1 A 0 A_AlertMonsters(0, AMF_TARGETEMITTER);
      TNT1 A 0 A_SetInvulnerable();
      HADE HGFE 4 Bright;
      TNT1 A 0 A_UnSetInvulnerable();
      TNT1 A 0 A_SetShootable();
      TNT1 A 0 A_Die();
      Stop;
    Death:
      TNT1 A 0 A_NoBlocking();
      TNT1 A 0 A_SetTranslucent(0.9, 1);
      TNT1 A 0 A_Scream();
      HADE M 4 Bright A_Explode(112, 112, XF_NOTMISSILE|XF_EXPLICITDAMAGETYPE, false, 0, 0, 10, "CompanionBulletPuff", "Companion");
      HADE NOPQ 5 Bright;
      Stop;
    XDeath:
      TNT1 A 0 A_Noblocking();
      HADE H 5 Bright A_StartSound("monster/haddth");
      HADE GFE 4 Bright;
      HADE RSTUVWX 4 Bright;
      Stop;
    Death.Ice:
      "####" "#" 0 { bNoGravity=false; }
      Goto GenericFreezeDeath;
  }

  // [Blue Shadow] Depending on whether or not the Hades Sphere is currently flying
  // (due to A_SkullAttack), choose the appropriate "chase mode".
  // [ Ghastly ] This is now a new function, rather than an inventory item.
  void HS_SpecialChase()
  {
    if( bSkullFly )
      A_Chase(null, null);
    else
      A_Chase();
  }

  override bool Slam(Actor victim)
  {
    bSkullFly = false;
    vel = (0, 0, 0);
    if (health > 0)
    {
      if (!bDormant)
      {
        int dam = GetMissileDamage (7, 1);
        int newdam = victim.DamageMobj (self, self, dam, "Companion");
        victim.TraceBleed (newdam > 0 ? newdam : dam, self);
        if (health > 0)
        {
          if (SeeState != NULL && !bRetargetAfterSlam){
            SetState (SeeState);
          }else{
            SetIdle();
          }
        }
      }
      else
      {
        SetIdle();
        tics = -1;
      }
    }
    return false;
  }
}

// [MagicWazard] NOTES: +DONTHARMCLASS was originally enabled, but HS were still
// able to damage each other with self-destructs due to way the self-destruct
// was coded. Now that the self-destruct code has been changed, they are
// invulnerable to each others' explosions if that flag is enabled. Keep
// +DONTHARMCLASS disabled if you want the HS to be vunlerable to each others'
// explosions! Remove the comments and enable the flag if you want the HS to be
// immune to other HS' self-destruct damage.

//End of Hades Sphere